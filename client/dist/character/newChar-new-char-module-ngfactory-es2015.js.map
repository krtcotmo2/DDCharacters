{"version":3,"sources":["./src/app/newChar/new-char-routing.module.ts","./src/app/newChar/new-char.module.ts","./src/app/newChar/new-char/new-char.component.html","./src/app/newChar/new-char/new-char.component.ts"],"names":[],"mappings":"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","file":"newChar-new-char-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewCharComponent } from './new-char/new-char.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: NewCharComponent}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n export class NewCharRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NewCharRoutingModule } from './new-char-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    NewCharRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class NewCharModule { }\r\n","<h1>New Character</h1>\r\n<form class=\"ui large form\" #modForm='ngForm' (ngSubmit)='onSubmit($event)'>\r\n  <div>\r\n    <div class='ui grid gridRow'>\r\n      <div  class=\"column sixteen wide ui input\" >\r\n        <label for=\"charName\">Name</label>\r\n        <input type='text' name='charName' [(ngModel)]='charName' >\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charRace\">Race</label>\r\n        <select name=\"charRace\"  [(ngModel)]='charRace'>\r\n          <option value=\"1\">Dwarf</option>\r\n          <option value=\"2\">Elf</option>\r\n          <option value=\"3\">Gnome</option>\r\n          <option value=\"4\">Halfling</option>\r\n          <option value=\"5\">Half-elf</option>\r\n          <option value=\"6\">Half-orc</option>\r\n          <option value=\"7\">Human</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\" style=\"width: calc(100% / 3);\">\r\n        <label for=\"charClass\">Class</label>\r\n        <select name=\"charClass\" [(ngModel)]='charClass'>\r\n          <option value=\"0\">Select One</option>\r\n          <option value=\"1\">Barbarian</option>\r\n          <option value=\"2\">Bard</option>\r\n          <option value=\"3\">Cleric</option>\r\n          <option value=\"4\">Druid</option>\r\n          <option value=\"5\">Fighter</option>\r\n          <option value=\"6\">Monk</option>\r\n          <option value=\"7\">Paladin</option>\r\n          <option value=\"8\">Ranger</option>\r\n          <option value=\"9\">Rogue</option>\r\n          <option value=\"10\">Sorcerer</option>\r\n          <option value=\"11\">Wizard</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charLevel\">Level</label>\r\n        <input type='number' name='charLevel' class='spellInput' [(ngModel)]='charLevel'>\r\n      </div>\r\n      <div class='ui grid gridRow' style=\"width: 100%; margin-bottom: 14px;\">\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charAlignment\">Alignment</label>\r\n          <select name=\"charAlignment\" [(ngModel)]='charAlignment'>\r\n            <option value=\"0\"></option>\r\n            <option *ngFor='let al of theAlignments' value={{al.alignID}}>{{al.alignName}}</option>\r\n          </select>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charHP\">Hit Points</label>\r\n          <input type='number' name='charHP' class='spellInput' [(ngModel)]='charHP'>\r\n        </div>\r\n      </div>\r\n      <!--\r\n      <h1>Base Stats - do not include racial benefits. </h1>\r\n      <div class='ui grid gridRow'>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charStr\">Strength</label>\r\n          <input type='number' name='charStr' [(ngModel)]='charStr'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charDex\">Dexterity</label>\r\n          <input type='number' name='charDex' [(ngModel)]='charDex'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charCon\">Constitution</label>\r\n          <input type='number' name='charCon' [(ngModel)]='charCon'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charInt\">Intelligence</label>\r\n          <input type='number' name='charInt' [(ngModel)]='charInt'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charWis\">Wisdom</label>\r\n          <input type='number' name='charWis' [(ngModel)]='charWis'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charChr\">Chraisma</label>\r\n          <input type='number' name='charChr' [(ngModel)]='charChr'>\r\n        </div>\r\n      </div>\r\n      -->\r\n    </div>\r\n  </div>\r\n  <div class=\"container\" style='text-align: center; margin-top:24px'>\r\n    <button class='ui primary button' type=\"submit\">Save</button>\r\n    <button class='ui yellow button' type=\"button\" style=\"margin-left:24px\" (click)='onCancel($event)'>Cancel</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { CharDataService } from '../../services/char-data.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport _ from 'lodash';\r\nimport {Stats, Saves} from '../../helpers/enum';\r\n\r\n@Component({\r\n  selector: 'app-new-char',\r\n  templateUrl: './new-char.component.html',\r\n  styleUrls: ['./new-char.component.css']\r\n})\r\nexport class NewCharComponent implements OnInit {\r\n  modForm;\r\n  loggedIn: {};\r\n  charName: string;\r\n  charRace: string;\r\n  charClass: string;\r\n  charAlignment: string;\r\n  charHP: string;\r\n  charLevel: string;\r\n  charStr: string;\r\n  charDex: string;\r\n  charCon: string;\r\n  charInt: string;\r\n  charWis: string;\r\n  charChr: string;\r\n  theAlignments;\r\n\r\n  constructor(private charDataSvc: CharDataService,\r\n    private userDataService: UserService,\r\n    private router: Router,\r\n    private http: HttpClient ) { }\r\n\r\n    ngOnInit(): void {\r\n      this.userDataService.getUser.subscribe( (val) => this.loggedIn = val);\r\n      this.charDataSvc.getAllAlignment.subscribe( (val) => this.theAlignments = val.results);\r\n      if (!this.theAlignments || this.theAlignments.length === 0){\r\n        this.charDataSvc.loadAlignments().subscribe( val => {\r\n          this.theAlignments = val.results;\r\n          this.charDataSvc.setAllAlignments(val);\r\n        });\r\n      }\r\n    }\r\n    onCancel = evt =>{\r\n      console.log('evt')\r\n      this.router.navigate(['/charLoad']);\r\n    }\r\n\r\n    onSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      const body = {\r\n        userID: this.loggedIn['userID'],\r\n        charName: this.charName,\r\n        charHP: this.charHP,\r\n        raceID: this.charRace,\r\n        alignID: this.charAlignment,\r\n        classID: this.charClass,\r\n        classLvl: this.charLevel\r\n      };\r\n      this.charDataSvc.addCharacter(body).subscribe(vals => {\r\n        this.router.navigate(['/charLoad']);\r\n      });\r\n    }\r\n  }\r\n"],"sourceRoot":"webpack:///"}