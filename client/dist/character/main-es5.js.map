{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/services/char-data.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","m","routes","path","loadChildren","component","AppRoutingModule","AppComponent","charDataSvc","userService","title","theUser","isLoggedIn","getUser","subscribe","val","userName","AppModule","HomeComponent","router","http","_snackBar","onSubmit","evt","preventDefault","body","userEmail","password","console","log","guest","forcedReset","userID","userPassword","setUser","navigate","loginUser","isForced","err","open","duration","horizontalPosition","verticalPosition","panelClass","onReSubmit","newPassword","confPassword","confPasswordField","nativeElement","focus","emailAddress","resetPassword","aValue","onCreate","insertUser","resendPassword","tempEmail","isNewUser","document","location","pathname","undefined","CharDataService","curCharID","charID","charBasics","results","charName","allFeats","allStats","allSaves","allSkills","allToHits","allEquipment","allAC","allNotes","allSpells","allAlignments","getCurCharID","asObservable","getCharID","getCharBasics","getCharName","getAllFeats","getAllStats","getAllSaves","getAllSkills","getAllNotes","getAllToHits","getAllEquip","getAllACs","getAllSpells","getAllAlignment","setCharBasics","arg","next","setAllFeats","setStats","setSaves","setAllSkills","setAllNotes","setAllToHits","setAllEquipment","setAllACs","setAllSpells","setAllAlignments","reset","loadCharBase","get","headers","addCharacter","obj","post","insertClassLevels","loadStats","loadFeats","loadOtherFeats","arr","join","saveNewFeat","feat","deleteFeat","loadSkills","loadOtherSkills","saveNewSkill","skill","updateAttribute","attType","modDesc","score","saveID","statID","skillID","toHitID","isBase","isMod","isClassSkill","deleteAttribute","attId","loadSaves","loadToHits","newToHit","cID","toHitDesc","damage","critRange","critDamage","reorderToHits","put","loadEquipment","addEquipment","deleteEquipment","reorderEqiup","loadAC","updateHP","charHP","updateXP","charXP","updateInit","init","loadNotes","toString","loadNotesItems","noteID","addNoteHeader","addNoteItem","updateNoteHeader","updateNoteItem","deleteNoteHeader","deleteNoteItem","reorderNoteItems","reorderNoteHeader","loadClasses","loadSpells","insertSpell","toggleSpell","updateSpell","deleteSpell","loadAlignments","UserService","user","environment","production","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent} from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'charGen', loadChildren: () => import('./chargen/chargen.module').then(m => m.ChargenModule) },\r\n  {path: 'charLoad', loadChildren: () => import('./charload/charload.module').then(m => m.CharloadModule) },\r\n  {path: 'newChar', loadChildren: () => import('./newChar/new-char.module').then(m => m.NewCharModule) },\r\n  {path: 'party', loadChildren: () => import('./party/party.module').then(m => m.PartyModule) },\r\n  {path: '', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div class=\"content\" role=\"main\">\r\n  <div class=\"ui secondary pointing menu\">\r\n    <a routerLink='' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Home</a>\r\n    <a *ngIf='isLoggedIn' routerLink='charLoad' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Load Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='charGen' routerLinkActive='active' class=\"item\" >Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='newChar' routerLinkActive='active' class=\"item\" >New Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='party/search' routerLinkActive='active' class=\"item\" >Party</a>\r\n    <div class=\"item\" style='position: absolute; right:0px;'>Welcome {{theUser['userName']}}</div>\r\n  </div>\r\n  <div class=\"ui segment container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n","import { Component } from '@angular/core';\r\nimport { CharDataService } from './services/char-data.service';\r\nimport { UserService } from './services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'character Manager';\r\n  theUser = {};\r\n  userName: string;\r\n  isLoggedIn = false;\r\n\r\n  constructor(private charDataSvc: CharDataService,\r\n    private userService: UserService){}\r\n\r\n    ngOnInit(): void {\r\n      this.userService.getUser.subscribe( val => {\r\n        this.theUser = val;\r\n        this.isLoggedIn = this.theUser['isLoggedIn'];\r\n        this.userName = this.theUser['userName'];\r\n      });\r\n\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewCharComponent } from './newChar/new-char/new-char.component';\r\nimport { ChargenHomeComponent } from './chargen/chargen-home/chargen-home.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBar} from '@angular/material/snack-bar';\r\nimport { OverlayModule  } from '@angular/cdk/overlay';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NewCharComponent,\r\n    ChargenHomeComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n  ],\r\n  providers: [MatSnackBar],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h1>Pathfinder Character Management System</h1>\r\n<div class=\"ui grid\">\r\n  <div class=\"ten wide column\">\r\n    <p>This application allows for easy storage and access to all aspects of a Pathfinder character. All characters are visible to all users but you can only edit characters that you control.</p>\r\n    <p>Once you log in the top navigation bar will have an option to load a character or view details for a loaded character. Character details include Stats, To hits, Armor Class, Saves, Skills, Feats, Notes, Equipment, and Memorized Spells.</p>\r\n    <p>DO NOT click on the refesh browser window as it will drop your token and you will need to log in again. To reload the page simple click on the tab you are currently viewing. The back and forward arrows of the browser work. </p>\r\n  </div>\r\n  <div class=\"six wide column\">\r\n    <form class=\"ui large form\" #modForm='ngForm' (ngSubmit)='onSubmit($event)' *ngIf='!isLoggedIn && !isNewUser'>\r\n      <div #formRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"email\" [(ngModel)]='userName' placeholder=\"E-mail address\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"password\"  [(ngModel)]='password' placeholder=\"Password\">\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Login</button>\r\n          <p style='margin:12px 0'>Forgot your password? Type your email address in the email address field and click the button below.</p>\r\n          <button class=\"ui fluid large primary button\" type=\"button\" (click)='resendPassword()'>Forgot Password</button>\r\n        </div>\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n\r\n    <form class=\"ui large form\" #restForm='ngForm' (ngSubmit)='onReSubmit($event)' *ngIf='isForced'>\r\n      <div #restFormRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <h1>Password Reset</h1>\r\n          <p>You must reset your password before proceeding.</p>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"newPassword\"  [(ngModel)]='newPassword' placeholder=\"New Password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"confPassword\"  [(ngModel)]='confPassword' placeholder=\"Verify Password\" #confPasswordField>\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Save</button>\r\n        </div>\r\n\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n\r\n    <form class=\"ui large form\" #restForm='ngForm' (ngSubmit)='onCreate($event)' *ngIf='isNewUser'>\r\n      <div #restFormRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <h1>New User</h1>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"userName\"  [(ngModel)]='userName' placeholder=\"User's Name\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"emailAddress\"  [(ngModel)]='emailAddress' placeholder=\"Email Address\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"newPassword\"  [(ngModel)]='newPassword' placeholder=\"New Password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"confPassword\"  [(ngModel)]='confPassword' placeholder=\"Verify Password\" #confPasswordField>\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Save</button>\r\n        </div>\r\n\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { UserService } from '../services/user.service';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isLoggedIn: boolean;\r\n  isForced: boolean;\r\n  theUser;\r\n  userName: string;\r\n  password:string;\r\n  emailAddress: string;\r\n  newPassword: string;\r\n  confPassword: string;\r\n  modForm;\r\n  restForm;\r\n  isNewUser: boolean;\r\n  @ViewChild('confPasswordField') confPasswordField: ElementRef;\r\n  constructor(private userService: UserService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private _snackBar: MatSnackBar ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isNewUser = document.location.pathname === '/newUser';\r\n    this.isForced = false;\r\n    this.userService.getUser.subscribe( val => this.theUser = val);\r\n    this.isLoggedIn = this.theUser.userEmail !== undefined;\r\n  }\r\n\r\n  onSubmit = evt => {\r\n    evt.preventDefault();\r\n    const body = {\r\n      userEmail: this.userName,\r\n      password: this.password\r\n    }\r\n\r\n    if(this.userName === 'guest' && this.password ==='Gu3st'){\r\n      console.log('guest');\r\n      const guest = {\r\n        forcedReset: false,\r\n        userEmail: \"guest@guest.com\",\r\n        userID: 0,\r\n        userName: \"Guest\",\r\n        userPassword: null,\r\n        isLoggedIn: true\r\n      }\r\n      this.userService.setUser(guest);\r\n      this.router.navigate(['/charLoad']);\r\n      return;\r\n    }\r\n\r\n    this.userService.loginUser(body).subscribe( (val) => {\r\n      this.theUser = val;\r\n      if (this.theUser.forcedReset){\r\n        this.isLoggedIn = true;\r\n        this.isForced = true;\r\n        return;\r\n      } else {\r\n        this.theUser.isLoggedIn = true;\r\n        this.userService.setUser(this.theUser);\r\n        this.router.navigate(['/charLoad']);\r\n      }\r\n    },\r\n    err => {\r\n      this._snackBar.open('Invalid Login. Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    })\r\n  }\r\n\r\n  onReSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (this.newPassword !== this.confPassword){\r\n      this.confPassword = '';\r\n      this.confPasswordField.nativeElement.focus()\r\n      this._snackBar.open('Passwords did not match, Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      return;\r\n    }\r\n    const body = {\r\n      userName: this.emailAddress,\r\n      password: this.newPassword,\r\n      userID: this.theUser.userID\r\n    };\r\n\r\n    this.userService.resetPassword(body).subscribe( (val) => {\r\n      const aValue: {} = val;\r\n      if (aValue['status'] === 'done') {\r\n        this.theUser.isLoggedIn = true;\r\n        this.theUser.forcedReset = false;\r\n        this.userService.setUser(this.theUser);\r\n        this.isForced = false;\r\n        this.isLoggedIn = true;\r\n        this.router.navigate(['/charLoad']);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreate = (evt) => {\r\n    if (this.newPassword !== this.confPassword){\r\n      this.confPassword = '';\r\n      this.confPasswordField.nativeElement.focus()\r\n      this._snackBar.open('Passwords did not match, Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      return;\r\n    }\r\n    const body = {\r\n      userName: this.userName,\r\n      password: this.newPassword,\r\n      userEmail: this.emailAddress\r\n    };\r\n    this.userService.insertUser(body).subscribe( val => {\r\n      this.theUser = val;\r\n      this.theUser.userPassword = null;\r\n      this.userService.setUser(this.theUser);\r\n      this.router.navigate(['/charLoad']);\r\n    });\r\n  }\r\n\r\n  resendPassword = () =>{\r\n    const tempEmail = this.userName;\r\n    this.userName = '';\r\n    console.log(tempEmail);\r\n    const body = {\r\n      userEmail: tempEmail\r\n    }\r\n    this.userService.newPassword(body).subscribe(val => {\r\n      this._snackBar.open('Password reset. Check your email', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    },\r\n    err => {\r\n      this._snackBar.open('Email not found in database', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable, ɵɵresolveBody } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nexport interface CharBasics {\r\n  charID: string;\r\n  results: {\r\n    charID: number;\r\n    charName: string;\r\n    charHP: number;\r\n    charXP: number;\r\n    init: number;\r\n    userID: number;\r\n    isDead: boolean;\r\n    Alignment: {\r\n      alignID: number;\r\n      alignName: string;\r\n    },\r\n    Race: {\r\n      raceID: number;\r\n      raceDesc: string;\r\n    },\r\n    CharLevels: {\r\n      classLevel: number;\r\n      CharClass: {\r\n        className: string;\r\n        classID: number;\r\n      }\r\n    }[]\r\n  };\r\n}\r\n\r\ninterface Stats {\r\n  charID: string;\r\n  results: {\r\n    statID: number;\r\n    score: number;\r\n    isBase: boolean;\r\n    isMod: boolean;\r\n    modDesc: string;\r\n  }[];\r\n}\r\n\r\ninterface Saves {\r\n  charID: string;\r\n  results: {\r\n    id: number;\r\n    saveID: number;\r\n    score: number;\r\n    isBase: boolean;\r\n    isMod: boolean;\r\n    modDesc: string;\r\n    Save: {\r\n      saveDesc: string;\r\n    }\r\n  }[];\r\n}\r\n\r\ninterface Spells {\r\n  charID: string;\r\n  results: {\r\n    id: number,\r\n    spellID: number,\r\n    charID: number,\r\n    spellLevel: number,\r\n    spellName: string,\r\n    isCast: boolean\r\n    }[];\r\n}\r\n\r\ninterface CharToHits {\r\n  charID: string;\r\n  results: {\r\n      name: string,\r\n    }[];\r\n}\r\n\r\ninterface CharFeat {\r\n  charID: string;\r\n  results: {\r\n      benefit: string;\r\n      id: number,\r\n      name: string,\r\n      normal: string,\r\n      prerequisites: string,\r\n      prerequisitie_feats: string,\r\n      shortdescription: string,\r\n      special: string\r\n    }[];\r\n}\r\n\r\ninterface CharSkills {\r\n  charID: string;\r\n  results: {\r\n    skillID: number;\r\n    score: number;\r\n    isRanks: boolean;\r\n    isMod: boolean;\r\n    isClassSkill: boolean;\r\n    modDesc: string;\r\n    Skill: {\r\n      skillID: number;\r\n      skillName: string;\r\n      skillAttr: string;\r\n      SkillDesc: string;\r\n      untrained: boolean;\r\n    }\r\n  }[];\r\n}\r\n\r\ninterface CharClasses {\r\n  results: {\r\n      name: string,\r\n    }[];\r\n}\r\n\r\ninterface Equipment {\r\n  charID: number,\r\n  results: {\r\n      id: number,\r\n      charID: number,\r\n      weight: number,\r\n      equip: string,\r\n      location: string,\r\n      equipOrder: number\r\n    }[];\r\n}\r\n\r\ninterface AC {\r\n  charID: number,\r\n  results: {\r\n      id: number,\r\n      charID: number,\r\n      score: number,\r\n      modDesc: string,\r\n      isBase: boolean,\r\n      isMod: boolean,\r\n    }[];\r\n}\r\n\r\ninterface Notes {\r\n  charID: string,\r\n  results: {\r\n    noteID: number;\r\n    noteOrder: number;\r\n    noteTitle: string;\r\n  }[];\r\n}\r\n\r\ninterface Alignments {\r\n  results: {\r\n      alignID: string,\r\n      alignName: string,\r\n    }[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharDataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // DECLARATIONS\r\n  private curCharID = new BehaviorSubject(0);\r\n  private charID = new BehaviorSubject(0);\r\n  private charBasics = new BehaviorSubject<CharBasics> ({results: {}} as CharBasics);\r\n  private charName = new BehaviorSubject('');\r\n  private allFeats = new BehaviorSubject<CharFeat>( {results: []} as CharFeat );\r\n  private allStats = new BehaviorSubject<Stats>( {results: []} as Stats );\r\n  private allSaves = new BehaviorSubject<Saves>( {results: []} as Saves );\r\n  private allSkills = new BehaviorSubject<CharSkills>( {results: []} as CharSkills );\r\n  private allToHits = new BehaviorSubject<CharToHits>( {results: []} as CharToHits );\r\n  private allEquipment = new BehaviorSubject<Equipment>( {results: []} as Equipment );\r\n  private allAC = new BehaviorSubject<AC>( {results: []} as AC );\r\n  private allNotes = new BehaviorSubject<Notes>( {results: []} as Notes);\r\n  private allSpells = new BehaviorSubject<Spells>( {results: []} as Spells);\r\n  private allAlignments = new BehaviorSubject<Alignments>( {results: []} as Alignments);\r\n\r\n  // GETTERS\r\n    getCurCharID = this.curCharID.asObservable();\r\n    getCharID = this.charID.asObservable();\r\n    getCharBasics = this.charBasics.asObservable();\r\n    getCharName = this.charName.asObservable();\r\n    getAllFeats = this.allFeats.asObservable();\r\n    getAllStats = this.allStats.asObservable();\r\n    getAllSaves = this.allSaves.asObservable();\r\n    getAllSkills = this.allSkills.asObservable();\r\n    getAllNotes = this.allNotes.asObservable();\r\n    getAllToHits = this.allToHits.asObservable();\r\n    getAllEquip = this.allEquipment.asObservable();\r\n    getAllACs = this.allAC.asObservable();\r\n    getAllSpells = this.allSpells.asObservable();\r\n    getAllAlignment = this.allAlignments.asObservable();\r\n\r\n  // SETTERS\r\n    setCurCharID(arg: number) { this.curCharID.next(arg); }\r\n    setCharID(arg: number) { this.charID.next(arg); }\r\n    setCharBasics = (arg) => { this.charBasics.next(arg); };\r\n    setCharName(arg: string) { this.charName.next(arg); }\r\n    setAllFeats = (arg) => { this.allFeats.next(arg); };\r\n    setStats = (arg) => { this.allStats.next(arg); };\r\n    setSaves = (arg) => { this.allSaves.next(arg); };\r\n    setAllSkills = (arg) => { this.allSkills.next(arg); };\r\n    setAllNotes = (arg) => { this.allNotes.next(arg); };\r\n    setAllToHits = (arg) => { this.allToHits.next(arg); };\r\n    setAllEquipment = (arg) => { this.allEquipment.next(arg); };\r\n    setAllACs = (arg) => { this.allAC.next(arg); };\r\n    setAllSpells = (arg) => { this.allSpells.next(arg); };\r\n    setAllAlignments = (arg) => { this.allAlignments.next(arg); };\r\n\r\n  // global reset\r\n    reset = () => {\r\n      this.charBasics.next(null);\r\n      this.charName.next('');\r\n      this.charID.next(0);\r\n      this.allFeats.next(null);\r\n      this.allSkills.next(null);\r\n      this.allStats.next(null);\r\n      this.allSaves.next(null);\r\n      this.allToHits.next(null);\r\n      this.allNotes.next(null);\r\n      this.allSpells.next(null);\r\n    }\r\n\r\n  // remote loaders\r\n    // tslint:disable:max-line-length\r\n\r\n  // CHARACTER\r\n    loadCharBase = (id: string) => {\r\n      const val = this.http.get<CharBasics>('/api/characters/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n\r\n      return val;\r\n    }\r\n\r\n    addCharacter = (obj: object) => {\r\n      const val = this.http.post<any>('/api/characters/new', {...obj}, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n\r\n      return val;\r\n    }\r\n\r\n    insertClassLevels = (obj: object) => {\r\n      const val = this.http.post<any>('/api/characters/updateClass', {...obj}, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // STATS\r\n    loadStats = (arg: number ) => {\r\n      const val = this.http.get<Stats>('/api/stats/ ' + arg, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // FEATS\r\n    loadFeats = (id: string) => {\r\n      const val =  this.http.get<CharFeat>('/api/characters/feats/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadOtherFeats = (arr) => {\r\n      const body = {\r\n        val: arr.join(\",\")\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/feats/all', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    saveNewFeat = (charID, feat) => {\r\n      const body = {\r\n        charID,\r\n        feat\r\n      };\r\n      const val =  this.http.post<CharFeat>('/api/feats/addFeat', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteFeat = (id) => {\r\n      const val =  this.http.delete<CharFeat>('/api/feats/delete/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // SKILLS\r\n    loadSkills = (id: string) => {\r\n      const val =  this.http.get<CharSkills>('/api/characters/skills/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadOtherSkills = (arr) => {\r\n      const body = {\r\n        val: arr.join(\",\")\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/skills/all', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    saveNewSkill = (charID, skill) => {\r\n      const body = {\r\n        charID,\r\n        skill\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/skills/addSKill', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateAttribute = (attType, obj ) => {\r\n      const body = {\r\n        id: obj.id,\r\n        modDesc: obj.modDesc,\r\n        score: obj.score,\r\n        charID: obj.charID,\r\n        saveID: attType === 'save' ? obj.statID : null,\r\n        skillID: attType === 'skill' ? obj.statID : null,\r\n        statID: attType === 'stat' ? obj.statID : null,\r\n        toHitID: attType === 'tohit' ? obj.statID : null,\r\n        isBase: obj.isBase,\r\n        isMod: obj.isMod,\r\n        isClassSkill: obj.isClassSkill\r\n      };\r\n      let val;\r\n      switch(attType){\r\n        case 'skill':\r\n          val =  this.http.post<any>('/api/characters/updateSkill/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'stat':\r\n          val =  this.http.post<any>('/api/characters/updateStat/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'save':\r\n          val =  this.http.post<any>('/api/characters/updateSave/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'ac':\r\n          val =  this.http.post<any>('/api/characters/ac/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'tohit':\r\n          val =  this.http.post<any>('/api/characters/updateToHit/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return val;\r\n    }\r\n\r\n    deleteAttribute = (attType, attId) => {\r\n      const body = {\r\n        id: attId,\r\n      };\r\n      let val;\r\n      switch(attType){\r\n        case 'skill':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteSkill/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteSkill/'+attId);\r\n          break;\r\n        case 'stat':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteStat/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteStat/'+attId);\r\n          break;\r\n          break;\r\n        case 'save':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteSave/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteSave/'+attId);\r\n          break;\r\n        case 'ac':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteAC/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteAC/'+attId);\r\n          break;\r\n        case 'tohit':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteToHit/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteToHit/'+attId);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return val;\r\n    }\r\n\r\n  // SAVES\r\n    loadSaves = (id: string) => {\r\n      //const val =  this.http.get<Saves>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/saves/' + id, {\r\n      const val =  this.http.get<Saves>('/api/characters/saves/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // TO HITS\r\n    loadToHits = (id: string) => {\r\n    //const val =  this.http.get<CharToHits>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/toHits/' + id, {\r\n      const val =  this.http.get<CharToHits>('/api/characters/toHits/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    newToHit = (cID, obj) => {\r\n      const body = {\r\n        id: obj.toHitID,\r\n        toHitDesc: obj.toHitDesc,\r\n        damage: obj.damage,\r\n        critRange: obj.critRange,\r\n        critDamage: obj.critDamage,\r\n        charID: cID,\r\n      }\r\n      //const val = this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/newToHit/', body, {\r\n      const val = this.http.post<any>('/api/newToHit/', body, {\r\n          headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderToHits = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/newToHit/reorderToHits', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // EQUIPMENT\r\n    loadEquipment = (id: number) => {\r\n      //const val =  this.http.get<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/' + id, {\r\n      const val =  this.http.get<Equipment>('/api/characters/equip/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addEquipment = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/characters/equip/add', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteEquipment = (id: number) => {\r\n      //const val =  this.http.delete<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteequip/' + id, {\r\n      const val =  this.http.delete<Equipment>('/api/characters/deleteequip/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderEqiup = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/characters/equip/reorderEquip', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // AC\r\n    loadAC = (id: number) => {\r\n      //const val =  this.http.get<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/ac/' + id, {\r\n      const val =  this.http.get<Equipment>('/api/characters/ac/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // HP\r\n    updateHP = (charID: number, charHP: number) => {\r\n      const body = {\r\n        charID: charID,\r\n        charHP: charHP\r\n      }\r\n      const val =  this.http.post<any>('/api/characters/updateHP/', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // XP\r\n    updateXP = (charID: number, charXP: number) => {\r\n      const body = {\r\n        charID: charID,\r\n        charXP: charXP\r\n      }\r\n      const val =  this.http.post<any>('/api/characters/updateXP/', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // INITIATIVE\r\n    updateInit = (charID: number, init: number) => {\r\n      const body = {\r\n        charID: charID,\r\n        init: init\r\n      }\r\n      const val =  this.http.post<any>('/api/characters/updateInit/', body, {\r\n            headers: new HttpHeaders({\r\n            'Access-Control-Allow-Origin': '*'\r\n          }),\r\n        });\r\n        return val;\r\n    }\r\n\r\n  // NOTES\r\n    loadNotes = (charID: number) =>{\r\n      const val =  this.http.get<any>('/api/notes/getCharNotes/' + charID.toString(), {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadNotesItems = (noteID: string) => {\r\n      const val =  this.http.get<any>('/api/notes/getNoteItems/' + noteID, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addNoteHeader = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/notes/insertNoteHeader', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addNoteItem = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/notes/insertNoteItem', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateNoteHeader = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/notes/updateNote', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateNoteItem = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/notes/updateNoteItem', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteNoteHeader = (noteID: string) => {\r\n      const val =  this.http.post<any>('/api/notes/deleteNote/' + noteID, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteNoteItem = (id: string) => {\r\n      const val =  this.http.post<any>('/api/notes/deleteNoteItem/' + id, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderNoteItems = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/notes/reorderNoteItem', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderNoteHeader = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/notes/reorderNoteHeader', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // CLASSES\r\n    loadClasses = (id: string) => {\r\n    }\r\n  // SPELLS\r\n    loadSpells = (charID: number) =>{\r\n      const val =  this.http.get<any>('/api/spells/getAllSpells/' + charID.toString(), {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    insertSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/addASpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    toggleSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/toggleSpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/updateASpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteSpell = (id: string) => {\r\n      const val =  this.http.delete<any>('/api/spells/deleteASpell/' + id, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // ALIGNMENTS\r\n      loadAlignments = () => {\r\n        const val =  this.http.get<Alignments>('/api/alignments/', {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n          }),\r\n        });\r\n        return val;\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {pluck} from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\ninterface User {\r\n  userName: string;\r\n  userEmail: string;\r\n  userID: number;\r\n  forcedReset: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private user = new BehaviorSubject<User> ({} as User);\r\n\r\n  // GETTERS\r\n  getUser = this.user.asObservable();\r\n\r\n  // SETTERS\r\n  setUser(arg) { this.user.next(arg); }\r\n\r\n  loginUser = (body: {} ) => {\r\n    const val =  this.http.post<any>('/api/login', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  resetPassword = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/resetPassword', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  insertUser  = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/insertUser', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  newPassword  = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/newPassword', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}