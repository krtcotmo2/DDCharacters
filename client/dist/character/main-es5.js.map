{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chargen/chargen-home/chargen-home.component.ts","webpack:///src/app/chargen/chargen-home/chargen-home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/newChar/new-char/new-char.component.ts","webpack:///src/app/newChar/new-char/new-char.component.html","webpack:///src/app/services/char-data.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","ChargenModule","CharloadModule","NewCharModule","PartyModule","component","AppRoutingModule","forRoot","imports","AppComponent","charDataSvc","userService","title","theUser","isLoggedIn","subs","getUser","subscribe","val","userName","forEach","s","unsubscribe","selector","templateUrl","styleUrls","console","log","document","location","hostname","protocol","includes","config","url","host","options","transports","upgrade","AppModule","declarations","providers","bootstrap","ChargenHomeComponent","titleValue","charName","getCharID","charID","getCharName","HomeComponent","router","http","_snackBar","onSubmit","evt","preventDefault","body","userEmail","password","guest","forcedReset","userID","userPassword","setUser","navigate","loginUser","isForced","err","open","duration","horizontalPosition","verticalPosition","panelClass","onReSubmit","newPassword","confPassword","confPasswordField","nativeElement","focus","emailAddress","resetPassword","aValue","onCreate","insertUser","resendPassword","tempEmail","isNewUser","pathname","undefined","NewCharComponent","userDataService","titleService","onCancel","loggedIn","charHP","raceID","charRace","alignID","charAlignment","classID","charClass","classLvl","charLevel","addCharacter","vals","getAllAlignment","theAlignments","results","length","loadAlignments","setAllAlignments","setTitle","CharDataService","socket","curCharID","charBasics","allFeats","allStats","allSaves","allSkills","allToHits","allEquipment","allAC","allACGrps","allNotes","allSpells","allAlignments","getCurCharID","asObservable","getCharBasics","getAllFeats","getAllStats","getAllSaves","getAllSkills","getAllNotes","getAllToHits","getAllEquip","getAllACs","getAllACGrps","getAllSpells","setCharBasics","arg","next","setAllFeats","setStats","setSaves","setAllSkills","setAllNotes","setAllToHits","setAllEquipment","setAllACs","setAllACGrps","setAllSpells","reset","loadCharBase","get","headers","obj","post","insertClassLevels","loadStats","loadFeats","loadOtherFeats","arr","join","saveNewFeat","feat","deleteFeat","loadSkills","loadOtherSkills","saveNewSkill","skill","updateAttribute","attType","modDesc","score","saveID","statID","skillID","toHitID","isBase","isMod","isClassSkill","acID","deleteAttribute","attId","loadSaves","loadToHits","newToHit","cID","toHitDesc","damage","critRange","critDamage","reorderToHits","put","loadEquipment","addEquipment","deleteEquipment","reorderEqiup","loadAC","loadACGrps","reorderACs","newACGrp","acDesc","updateHP","updateXP","charXP","updateInit","init","loadNotes","toString","loadNotesItems","noteID","addNoteHeader","addNoteItem","updateNoteHeader","updateNoteItem","deleteNoteHeader","deleteNoteItem","reorderNoteItems","reorderNoteHeader","loadClasses","loadSpells","insertSpell","broadcastMessage","event","payload","emit","toggleSpell","updateSpell","deleteSpell","providedIn","UserService","user","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,SAAP;AAAkBC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,gDAAmCV,IAAnC,CAAwC,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACC,aAAN;AAAA,SAAzC,CAAN;AAAA;AAAhC,KADqB,EAErB;AAACH,UAAI,EAAE,UAAP;AAAmBC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,kDAAqCV,IAArC,CAA0C,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACE,cAAN;AAAA,SAA3C,CAAN;AAAA;AAAjC,KAFqB,EAGrB;AAACJ,UAAI,EAAE,SAAP;AAAkBC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,iDAAoCV,IAApC,CAAyC,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACG,aAAN;AAAA,SAA1C,CAAN;AAAA;AAAhC,KAHqB,EAIrB;AAACL,UAAI,EAAE,OAAP;AAAgBC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,4CAA+BV,IAA/B,CAAoC,UAAAW,CAAC;AAAA,iBAAIA,CAAC,CAACI,WAAN;AAAA,SAArC,CAAN;AAAA;AAA9B,KAJqB,EAKrB;AAACN,UAAI,EAAE,EAAP;AAAWO,eAAS,EAAE;AAAtB,KALqB,CAAvB;;QAYaC,gB;;;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBV,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBS,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBV,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;ACGI;;AAA4H;;AAAc;;;;AAAvD;;;;;;AACnF;;AAAmF;;AAAS;;;;;;AAC5F;;AAAmF;;AAAa;;;;;;AAChG;;AAAwF;;AAAK;;;;QDKpFc,Y;;;AAQX,4BACUC,WADV,EAEUC,WAFV,EAEkC;AAAA;;AADxB,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AATV,aAAAC,KAAA,GAAQ,mBAAR;AACA,aAAAC,OAAA,GAAU,EAAV;AAEA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,IAAA,GAAuB,EAAvB;AAOG;;;;eAED,oBAAQ;AAAA;;AACN,eAAKJ,WAAL,CAAiBK,OAAjB,CAAyBC,SAAzB,CAAoC,UAAAC,GAAG,EAAI;AACzC,iBAAI,CAACL,OAAL,GAAeK,GAAf;AACA,iBAAI,CAACJ,UAAL,GAAkB,KAAI,CAACD,OAAL,CAAa,YAAb,CAAlB;AACA,iBAAI,CAACM,QAAL,GAAgB,KAAI,CAACN,OAAL,CAAa,UAAb,CAAhB;AACD,WAJD;AAKD;;;eAED,uBAAW;AACT,eAAKE,IAAL,CAAUK,OAAV,CAAmB,UAACC,CAAD;AAAA,mBAAqBA,CAAC,CAACC,WAAF,EAArB;AAAA,WAAnB;AACD;;;;;;;uBAxBQb,Y,EAAY,4I,EAAA,mI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,47B;AAAA;AAAA;ACXzB;;AACE;;AACE;;AAAiG;;AAAI;;AACrG;;AACA;;AACA;;AACA;;AACA;;AAAyD;;AAA+B;;AAC1F;;AACA;;AACE;;AACF;;AAXF;;;;AAE4D;;AAAA;;AACrD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACsD;;AAAA;;;;;;;;;sEDIhDA,Y,EAAY;cALxB,uDAKwB;eALd;AACTc,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBAC,WAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,QAAT,CAAkBC,QAA9B;AACA,QAAMC,QAAQ,GAAIH,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,CAA2BE,QAA3B,CAAoC,WAApC,IAAmD,IAAnD,GAA0D,KAA5E;AACA,QAAMC,MAAM,GAAmB;AAC7BC,SAAG,YAAKH,QAAL,gBAAmBH,QAAQ,CAACC,QAAT,CAAkBM,IAArC,CAD0B;AAE7BC,aAAO,EAAE;AACPC,kBAAU,EAAE,CAAC,WAAD,CADL;AAEPC,eAAO,EAAG,IAFH;AAGPxC,YAAI,EAAE;AAHC;AAFoB,KAA/B;;QAiCayC,S;;;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,wEAAD,C;AAAa,gBAbf,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,4FALO,EAMP,mEANO,EAOP,mEAPO,EAQP,2DARO,EASP,mFATO,EAUP,8DAAehC,OAAf,CAAuB0B,MAAvB,CAVO,CAae;;;;0HAGbM,S,EAAS;AAAA,uBAtBlB,2DAsBkB,EArBlB,kEAqBkB,EApBlB,qFAoBkB,EAnBlB,iGAmBkB;AAnBE,kBAIpB,uEAJoB,EAKpB,oEALoB,EAMpB,qEANoB,EAOpB,oEAPoB,EAQpB,4FARoB,EASpB,mEAToB,EAUpB,mEAVoB,EAWpB,2DAXoB,EAYpB,mFAZoB,EAYH,6DAZG;AAmBF,O;AAPD,K;;;;;sEAORA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,qFAHY,EAIZ,iGAJY,CADN;AAQRhC,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,oEAJO,EAKP,4FALO,EAMP,mEANO,EAOP,mEAPO,EAQP,2DARO,EASP,mFATO,EAUP,8DAAeD,OAAf,CAAuB0B,MAAvB,CAVO,CARD;AAqBRQ,mBAAS,EAAE,CAAC,wEAAD,CArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD;AAtBH,S;AAwBY,Q;;;;;;;;;;;;;;;;;;ACrDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAQaC,oB;;;AAIX,oCAAoBjC,WAApB,EAAkD;AAAA;;AAAA;;AAA9B,aAAAA,WAAA,GAAAA,WAAA;;AAOpB,aAAAkC,UAAA,GAAa,YAAM;AACjB,iBAAO,MAAI,CAACC,QAAZ;AACD,SAFD;AAPqD;;;;eAErD,oBAAQ;AAAA;;AACN,eAAKnC,WAAL,CAAiBoC,SAAjB,CAA2B7B,SAA3B,CAAsC,UAACC,GAAD;AAAA,mBAAS,MAAI,CAAC6B,MAAL,GAAc7B,GAAvB;AAAA,WAAtC;AACA,eAAKR,WAAL,CAAiBsC,WAAjB,CAA6B/B,SAA7B,CAAwC,UAACC,GAAD;AAAA,mBAAS,MAAI,CAAC2B,QAAL,GAAgB3B,GAAzB;AAAA,WAAxC;AACD;;;;;;;uBATUyB,oB,EAAoB,4I;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,i3B;AAAA;AAAA;ACRjC;;AAAI;;AAAgB;;AACpB;;AACE;;AAAmG;;AAAc;;AACjH;;AAAsG;;AAAK;;AAC3G;;AAA0D;;AAAE;;AAC5D;;AAA8D;;AAAO;;AACrE;;AAA6D;;AAAK;;AAClE;;AAA8D;;AAAM;;AACpE;;AAA6D;;AAAK;;AAClE;;AAA6D;;AAAS;;AACtE;;AAA8D;;AAAM;;AACpE;;AAAmE;;AAAW;;AAC9E;;AAA6D;;AAAK;;AACpE;;AACA;;AACE;;AACF;;;;AAhBI;;AAAA;;AAEwD;;AAAA;;AACG;;AAAA;;;;;;;;;sEDKlDA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTpB,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AERjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACQI;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAC5C;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAAhC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACF;;AACF;;AACA;;AAA4D;;AAAK;;AACjE;;AAAyB;;AAAoG;;AAC7H;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAe;;AACxG;;AACA;;AACF;;AACF;;;;;;AAf0C;;AAAA;;AAMQ;;AAAA;;;;;;;;AAWlD;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACE;;AACE;;AAAI;;AAAc;;AAClB;;AAAG;;AAA+C;;AAClD;;AACE;;AACE;;AACA;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACF;;AACF;;AACA;;AAA4D;;AAAI;;AAClE;;AAEA;;AACF;;AACF;;;;;;AAdqD;;AAAA;;AAMC;;AAAA;;;;;;;;AAUtD;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACE;;AACE;;AAAI;;AAAQ;;AACZ;;AACE;;AACE;;AACA;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAApC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAxC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA5C;;AACF;;AACF;;AACA;;AAA4D;;AAAI;;AAClE;;AAEA;;AACF;;AACF;;;;;;AA1B8C;;AAAA;;AAMI;;AAAA;;AAMG;;AAAA;;AAMC;;AAAA;;;;QDpE7CwB,a;;;AAaX,6BAAoBtC,WAApB,EACUuC,MADV,EAEUC,IAFV,EAGUC,SAHV,EAGgC;AAAA;;AAAA;;AAHZ,aAAAzC,WAAA,GAAAA,WAAA;AACV,aAAAuC,MAAA,GAAAA,MAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;;AASV,aAAAC,QAAA,GAAW,UAAAC,GAAG,EAAI;AAChBA,aAAG,CAACC,cAAJ;AACA,cAAMC,IAAI,GAAG;AACXC,qBAAS,EAAE,MAAI,CAACtC,QADL;AAEXuC,oBAAQ,EAAE,MAAI,CAACA;AAFJ,WAAb;;AAKA,cAAG,MAAI,CAACvC,QAAL,KAAkB,OAAlB,IAA6B,MAAI,CAACuC,QAAL,KAAiB,OAAjD,EAAyD;AACvDhC,mBAAO,CAACC,GAAR,CAAY,OAAZ;AACA,gBAAMgC,KAAK,GAAG;AACZC,yBAAW,EAAE,KADD;AAEZH,uBAAS,EAAE,iBAFC;AAGZI,oBAAM,EAAE,CAHI;AAIZ1C,sBAAQ,EAAE,OAJE;AAKZ2C,0BAAY,EAAE,IALF;AAMZhD,wBAAU,EAAE;AANA,aAAd;;AAQA,kBAAI,CAACH,WAAL,CAAiBoD,OAAjB,CAAyBJ,KAAzB;;AACA,kBAAI,CAACT,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;;AACA;AACD;;AAED,gBAAI,CAACrD,WAAL,CAAiBsD,SAAjB,CAA2BT,IAA3B,EAAiCvC,SAAjC,CAA4C,UAACC,GAAD,EAAS;AACnD,kBAAI,CAACL,OAAL,GAAeK,GAAf;;AACA,gBAAI,MAAI,CAACL,OAAL,CAAa+C,WAAjB,EAA6B;AAC3B,oBAAI,CAAC9C,UAAL,GAAkB,IAAlB;AACA,oBAAI,CAACoD,QAAL,GAAgB,IAAhB;AACA;AACD,aAJD,MAIO;AACL,oBAAI,CAACrD,OAAL,CAAaC,UAAb,GAA0B,IAA1B;;AACA,oBAAI,CAACH,WAAL,CAAiBoD,OAAjB,CAAyB,MAAI,CAAClD,OAA9B;;AACA,oBAAI,CAACqC,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,WAXD,EAYA,UAAAG,GAAG,EAAI;AACL,kBAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,0BAApB,EAAgD,EAAhD,EAAoD;AAClDC,sBAAQ,EAAE,IADwC;AAElDC,gCAAkB,EAAE,QAF8B;AAGlDC,8BAAgB,EAAE,KAHgC;AAIlDC,wBAAU,EAAE,CAAC,cAAD;AAJsC,aAApD;AAMD,WAnBD;AAoBD,SA1CD;;AA4CA,aAAAC,UAAA,GAAa,UAAAnB,GAAG,EAAI;AAClBA,aAAG,CAACC,cAAJ;;AACA,cAAI,MAAI,CAACmB,WAAL,KAAqB,MAAI,CAACC,YAA9B,EAA2C;AACzC,kBAAI,CAACA,YAAL,GAAoB,EAApB;;AACA,kBAAI,CAACC,iBAAL,CAAuBC,aAAvB,CAAqCC,KAArC;;AACA,kBAAI,CAAC1B,SAAL,CAAegB,IAAf,CAAoB,oCAApB,EAA0D,EAA1D,EAA8D;AAC5DC,sBAAQ,EAAE,IADkD;AAE5DC,gCAAkB,EAAE,QAFwC;AAG5DC,8BAAgB,EAAE,KAH0C;AAI5DC,wBAAU,EAAE,CAAC,cAAD;AAJgD,aAA9D;;AAMA;AACD;;AACD,cAAMhB,IAAI,GAAG;AACXrC,oBAAQ,EAAE,MAAI,CAAC4D,YADJ;AAEXrB,oBAAQ,EAAE,MAAI,CAACgB,WAFJ;AAGXb,kBAAM,EAAE,MAAI,CAAChD,OAAL,CAAagD;AAHV,WAAb;;AAMA,gBAAI,CAAClD,WAAL,CAAiBqE,aAAjB,CAA+BxB,IAA/B,EAAqCvC,SAArC,CAAgD,UAACC,GAAD,EAAS;AACvD,gBAAM+D,MAAM,GAAO/D,GAAnB;;AACA,gBAAI+D,MAAM,CAAC,QAAD,CAAN,KAAqB,MAAzB,EAAiC;AAC/B,oBAAI,CAACpE,OAAL,CAAaC,UAAb,GAA0B,IAA1B;AACA,oBAAI,CAACD,OAAL,CAAa+C,WAAb,GAA2B,KAA3B;;AACA,oBAAI,CAACjD,WAAL,CAAiBoD,OAAjB,CAAyB,MAAI,CAAClD,OAA9B;;AACA,oBAAI,CAACqD,QAAL,GAAgB,KAAhB;AACA,oBAAI,CAACpD,UAAL,GAAkB,IAAlB;;AACA,oBAAI,CAACoC,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF,WAVD;AAWD,SA9BD;;AAgCA,aAAAkB,QAAA,GAAW,UAAC5B,GAAD,EAAS;AAClB,cAAI,MAAI,CAACoB,WAAL,KAAqB,MAAI,CAACC,YAA9B,EAA2C;AACzC,kBAAI,CAACA,YAAL,GAAoB,EAApB;;AACA,kBAAI,CAACC,iBAAL,CAAuBC,aAAvB,CAAqCC,KAArC;;AACA,kBAAI,CAAC1B,SAAL,CAAegB,IAAf,CAAoB,oCAApB,EAA0D,EAA1D,EAA8D;AAC5DC,sBAAQ,EAAE,IADkD;AAE5DC,gCAAkB,EAAE,QAFwC;AAG5DC,8BAAgB,EAAE,KAH0C;AAI5DC,wBAAU,EAAE,CAAC,cAAD;AAJgD,aAA9D;;AAMA;AACD;;AACD,cAAMhB,IAAI,GAAG;AACXrC,oBAAQ,EAAE,MAAI,CAACA,QADJ;AAEXuC,oBAAQ,EAAE,MAAI,CAACgB,WAFJ;AAGXjB,qBAAS,EAAE,MAAI,CAACsB;AAHL,WAAb;;AAKA,gBAAI,CAACpE,WAAL,CAAiBwE,UAAjB,CAA4B3B,IAA5B,EAAkCvC,SAAlC,CAA6C,UAAAC,GAAG,EAAI;AAClD,kBAAI,CAACL,OAAL,GAAeK,GAAf;AACA,kBAAI,CAACL,OAAL,CAAaiD,YAAb,GAA4B,IAA5B;;AACA,kBAAI,CAACnD,WAAL,CAAiBoD,OAAjB,CAAyB,MAAI,CAAClD,OAA9B;;AACA,kBAAI,CAACqC,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WALD;AAMD,SAvBD;;AAyBA,aAAAoB,cAAA,GAAiB,YAAK;AACpB,cAAMC,SAAS,GAAG,MAAI,CAAClE,QAAvB;AACA,gBAAI,CAACA,QAAL,GAAgB,EAAhB;AACAO,iBAAO,CAACC,GAAR,CAAY0D,SAAZ;AACA,cAAM7B,IAAI,GAAG;AACXC,qBAAS,EAAE4B;AADA,WAAb;;AAGA,gBAAI,CAAC1E,WAAL,CAAiB+D,WAAjB,CAA6BlB,IAA7B,EAAmCvC,SAAnC,CAA6C,UAAAC,GAAG,EAAI;AAClD,kBAAI,CAACkC,SAAL,CAAegB,IAAf,CAAoB,kCAApB,EAAwD,EAAxD,EAA4D;AAC1DC,sBAAQ,EAAE,IADgD;AAE1DC,gCAAkB,EAAE,QAFsC;AAG1DC,8BAAgB,EAAE,KAHwC;AAI1DC,wBAAU,EAAE,CAAC,cAAD;AAJ8C,aAA5D;AAMD,WAPD,EAQA,UAAAL,GAAG,EAAI;AACL,kBAAI,CAACf,SAAL,CAAegB,IAAf,CAAoB,6BAApB,EAAmD,EAAnD,EAAuD;AACrDC,sBAAQ,EAAE,IAD2C;AAErDC,gCAAkB,EAAE,QAFiC;AAGrDC,8BAAgB,EAAE,KAHmC;AAIrDC,wBAAU,EAAE,CAAC,cAAD;AAJyC,aAAvD;AAMD,WAfD;AAgBD,SAvBD;AA9GsC;;;;eAEtC,oBAAQ;AAAA;;AACN,eAAKc,SAAL,GAAiB1D,QAAQ,CAACC,QAAT,CAAkB0D,QAAlB,KAA+B,UAAhD;AACA,eAAKrB,QAAL,GAAgB,KAAhB;AACA,eAAKvD,WAAL,CAAiBK,OAAjB,CAAyBC,SAAzB,CAAoC,UAAAC,GAAG;AAAA,mBAAI,MAAI,CAACL,OAAL,GAAeK,GAAnB;AAAA,WAAvC;AACA,eAAKJ,UAAL,GAAkB,KAAKD,OAAL,CAAa4C,SAAb,KAA2B+B,SAA7C;AACD;;;;;;;uBAvBUvC,a,EAAa,mI,EAAA,uH,EAAA,gI,EAAA,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA;AAAA;;;;;;;;;;;;;;;ACZ1B;;AAAI;;AAAsC;;AAC1C;;AACE;;AACE;;AAAG;;AAA+L;;AAClM;;AAAG;;AAA2O;;AAC9O;;AAAG;;AAA+N;;AACpO;;AACA;;AACE;;AAuBA;;AAwBA;;AAkCF;;AACF;;;;AAlFgF;;AAAA;;AAuBG;;AAAA;;AAwBF;;AAAA;;;;;;;;;sED3CpEA,a,EAAa;cALzB,uDAKyB;eALf;AACT1B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;gBAYvB,uD;iBAAU,mB;;;;;;;;;;;;;;;;;;;;AExBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiDY;;AAA8D;;AAAgB;;;;;;AAArC;;AAAqB;;AAAA;;;;QDnC7DgE,gB;;;AAiBX,gCAAoB/E,WAApB,EACUgF,eADV,EAEUxC,MAFV,EAGUyC,YAHV,EAIUxC,IAJV,EAI0B;AAAA;;AAAA;;AAJN,aAAAzC,WAAA,GAAAA,WAAA;AACV,aAAAgF,eAAA,GAAAA,eAAA;AACA,aAAAxC,MAAA,GAAAA,MAAA;AACA,aAAAyC,YAAA,GAAAA,YAAA;AACA,aAAAxC,IAAA,GAAAA,IAAA;;AAaR,aAAAyC,QAAA,GAAW,UAAAtC,GAAG,EAAG;AACf5B,iBAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,gBAAI,CAACuB,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,SAHD;;AAKA,aAAAX,QAAA,GAAW,UAACC,GAAD,EAAS;AAClBA,aAAG,CAACC,cAAJ;AACA,cAAMC,IAAI,GAAG;AACXK,kBAAM,EAAE,MAAI,CAACgC,QAAL,CAAc,QAAd,CADG;AAEXhD,oBAAQ,EAAE,MAAI,CAACA,QAFJ;AAGXiD,kBAAM,EAAE,MAAI,CAACA,MAHF;AAIXC,kBAAM,EAAE,MAAI,CAACC,QAJF;AAKXC,mBAAO,EAAE,MAAI,CAACC,aALH;AAMXC,mBAAO,EAAE,MAAI,CAACC,SANH;AAOXC,oBAAQ,EAAE,MAAI,CAACC;AAPJ,WAAb;;AASA,gBAAI,CAAC5F,WAAL,CAAiB6F,YAAjB,CAA8B/C,IAA9B,EAAoCvC,SAApC,CAA8C,UAAAuF,IAAI,EAAI;AACpD,kBAAI,CAACtD,MAAL,CAAYc,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WAFD;AAGD,SAdD;AAlB8B;;;;eAE9B,oBAAQ;AAAA;;AACN,eAAK0B,eAAL,CAAqB1E,OAArB,CAA6BC,SAA7B,CAAwC,UAACC,GAAD;AAAA,mBAAS,MAAI,CAAC2E,QAAL,GAAgB3E,GAAzB;AAAA,WAAxC;AACA,eAAKR,WAAL,CAAiB+F,eAAjB,CAAiCxF,SAAjC,CAA4C,UAACC,GAAD;AAAA,mBAAS,MAAI,CAACwF,aAAL,GAAqBxF,GAAG,CAACyF,OAAlC;AAAA,WAA5C;;AACA,cAAI,CAAC,KAAKD,aAAN,IAAuB,KAAKA,aAAL,CAAmBE,MAAnB,KAA8B,CAAzD,EAA2D;AACzD,iBAAKlG,WAAL,CAAiBmG,cAAjB,GAAkC5F,SAAlC,CAA6C,UAAAC,GAAG,EAAI;AAClD,oBAAI,CAACwF,aAAL,GAAqBxF,GAAG,CAACyF,OAAzB;;AACA,oBAAI,CAACjG,WAAL,CAAiBoG,gBAAjB,CAAkC5F,GAAlC;AACD,aAHD;AAID;;AACD,eAAKyE,YAAL,CAAkBoB,QAAlB,CAA2B,kBAA3B;AACD;;;;;;;uBAjCQtB,gB,EAAgB,4I,EAAA,mI,EAAA,uH,EAAA,gI,EAAA,gI;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,a;AAAA,y2C;AAAA;AAAA;ACd7B;;AAAI;;AAAa;;AACjB;;AAA8C;AAAA,mBAAY,IAAApC,QAAA,QAAZ;AAA4B,WAA5B;;AAC5C;;AACE;;AACE;;AACE;;AAAsB;;AAAI;;AAC1B;;AAAmC;AAAA;AAAA;;AAAnC;;AACF;;AACA;;AACE;;AAAsB;;AAAI;;AAC1B;;AAAyB;AAAA;AAAA;;AACvB;;AAAmB;;AAAU;;AAC7B;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAG;;AACrB;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAQ;;AAC1B;;AAAkB;;AAAK;;AACvB;;AAAmB;;AAAQ;;AAC7B;;AACF;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAyB;AAAA;AAAA;;AACvB;;AAAkB;;AAAU;;AAC5B;;AAAkB;;AAAS;;AAC3B;;AAAkB;;AAAI;;AACtB;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAK;;AACvB;;AAAkB;;AAAO;;AACzB;;AAAkB;;AAAI;;AACtB;;AAAkB;;AAAO;;AACzB;;AAAkB;;AAAM;;AACxB;;AAAkB;;AAAK;;AACvB;;AAAmB;;AAAQ;;AAC3B;;AAAmB;;AAAS;;AAC5B;;AAAmB;;AAAM;;AAC3B;;AACF;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAyD;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAS;;AACpC;;AAA6B;AAAA;AAAA;;AAC3B;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAoB;;AAAU;;AAC9B;;AAAsD;AAAA;AAAA;;AAAtD;;AACF;;AACF;;AA8BF;;AACF;;AACA;;AACE;;AAAgD;;AAAI;;AACpD;;AAAwE;AAAA,mBAAS,IAAAuC,QAAA,QAAT;AAAyB,WAAzB;;AAA2B;;AAAM;;AAC3G;;AACF;;;;AAtF2C;;AAAA;;AAIV;;AAAA;;AAcA;;AAAA;;AAkBgC;;AAAA;;AAK1B;;AAAA;;AAEnB;;AAAA;;AAK4C;;AAAA;;;;;;;;;sEDxCnDH,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoLauF,e;;;AACX,+BACU7D,IADV,EAEU8D,MAFV,EAEwB;AAAA;;AAAA;;AADd,aAAA9D,IAAA,GAAAA,IAAA;AACA,aAAA8D,MAAA,GAAAA,MAAA,CAAc,CAGxB;;AACQ,aAAAC,SAAA,GAAY,IAAI,oDAAJ,CAAoB,CAApB,CAAZ;AACA,aAAAnE,MAAA,GAAS,IAAI,oDAAJ,CAAoB,CAApB,CAAT;AACA,aAAAoE,UAAA,GAAa,IAAI,oDAAJ,CAAiC;AAACR,iBAAO,EAAE;AAAV,SAAjC,CAAb;AACA,aAAA9D,QAAA,GAAW,IAAI,oDAAJ,CAAoB,EAApB,CAAX;AACA,aAAAuE,QAAA,GAAW,IAAI,oDAAJ,CAA+B;AAACT,iBAAO,EAAE;AAAV,SAA/B,CAAX;AACA,aAAAU,QAAA,GAAW,IAAI,oDAAJ,CAA4B;AAACV,iBAAO,EAAE;AAAV,SAA5B,CAAX;AACA,aAAAW,QAAA,GAAW,IAAI,oDAAJ,CAA4B;AAACX,iBAAO,EAAE;AAAV,SAA5B,CAAX;AACA,aAAAY,SAAA,GAAY,IAAI,oDAAJ,CAAiC;AAACZ,iBAAO,EAAE;AAAV,SAAjC,CAAZ;AACA,aAAAa,SAAA,GAAY,IAAI,oDAAJ,CAAiC;AAACb,iBAAO,EAAE;AAAV,SAAjC,CAAZ;AACA,aAAAc,YAAA,GAAe,IAAI,oDAAJ,CAAgC;AAACd,iBAAO,EAAE;AAAV,SAAhC,CAAf;AACA,aAAAe,KAAA,GAAQ,IAAI,oDAAJ,CAAyB;AAACf,iBAAO,EAAE;AAAV,SAAzB,CAAR;AACA,aAAAgB,SAAA,GAAY,IAAI,oDAAJ,CAA6B;AAAChB,iBAAO,EAAE;AAAV,SAA7B,CAAZ;AACA,aAAAiB,QAAA,GAAW,IAAI,oDAAJ,CAA4B;AAACjB,iBAAO,EAAE;AAAV,SAA5B,CAAX;AACA,aAAAkB,SAAA,GAAY,IAAI,oDAAJ,CAA6B;AAAClB,iBAAO,EAAE;AAAV,SAA7B,CAAZ;AACA,aAAAmB,aAAA,GAAgB,IAAI,oDAAJ,CAAiC;AAACnB,iBAAO,EAAE;AAAV,SAAjC,CAAhB,CAlBgB,CAoBxB;;AACE,aAAAoB,YAAA,GAAe,KAAKb,SAAL,CAAec,YAAf,EAAf;AACA,aAAAlF,SAAA,GAAY,KAAKC,MAAL,CAAYiF,YAAZ,EAAZ;AACA,aAAAC,aAAA,GAAgB,KAAKd,UAAL,CAAgBa,YAAhB,EAAhB;AACA,aAAAhF,WAAA,GAAc,KAAKH,QAAL,CAAcmF,YAAd,EAAd;AACA,aAAAE,WAAA,GAAc,KAAKd,QAAL,CAAcY,YAAd,EAAd;AACA,aAAAG,WAAA,GAAc,KAAKd,QAAL,CAAcW,YAAd,EAAd;AACA,aAAAI,WAAA,GAAc,KAAKd,QAAL,CAAcU,YAAd,EAAd;AACA,aAAAK,YAAA,GAAe,KAAKd,SAAL,CAAeS,YAAf,EAAf;AACA,aAAAM,WAAA,GAAc,KAAKV,QAAL,CAAcI,YAAd,EAAd;AACA,aAAAO,YAAA,GAAe,KAAKf,SAAL,CAAeQ,YAAf,EAAf;AACA,aAAAQ,WAAA,GAAc,KAAKf,YAAL,CAAkBO,YAAlB,EAAd;AACA,aAAAS,SAAA,GAAY,KAAKf,KAAL,CAAWM,YAAX,EAAZ;AACA,aAAAU,YAAA,GAAe,KAAKf,SAAL,CAAeK,YAAf,EAAf;AACA,aAAAW,YAAA,GAAe,KAAKd,SAAL,CAAeG,YAAf,EAAf;AACA,aAAAvB,eAAA,GAAkB,KAAKqB,aAAL,CAAmBE,YAAnB,EAAlB;;AAKA,aAAAY,aAAA,GAAgB,UAACC,GAAD,EAAS;AAAE,gBAAI,CAAC1B,UAAL,CAAgB2B,IAAhB,CAAqBD,GAArB;AAA4B,SAAvD;;AAEA,aAAAE,WAAA,GAAc,UAACF,GAAD,EAAS;AAAE,gBAAI,CAACzB,QAAL,CAAc0B,IAAd,CAAmBD,GAAnB;AAA0B,SAAnD;;AACA,aAAAG,QAAA,GAAW,UAACH,GAAD,EAAS;AAAE,gBAAI,CAACxB,QAAL,CAAcyB,IAAd,CAAmBD,GAAnB;AAA0B,SAAhD;;AACA,aAAAI,QAAA,GAAW,UAACJ,GAAD,EAAS;AAAE,gBAAI,CAACvB,QAAL,CAAcwB,IAAd,CAAmBD,GAAnB;AAA0B,SAAhD;;AACA,aAAAK,YAAA,GAAe,UAACL,GAAD,EAAS;AAAE,gBAAI,CAACtB,SAAL,CAAeuB,IAAf,CAAoBD,GAApB;AAA2B,SAArD;;AACA,aAAAM,WAAA,GAAc,UAACN,GAAD,EAAS;AAAE,gBAAI,CAACjB,QAAL,CAAckB,IAAd,CAAmBD,GAAnB;AAA0B,SAAnD;;AACA,aAAAO,YAAA,GAAe,UAACP,GAAD,EAAS;AAAE,gBAAI,CAACrB,SAAL,CAAesB,IAAf,CAAoBD,GAApB;AAA2B,SAArD;;AACA,aAAAQ,eAAA,GAAkB,UAACR,GAAD,EAAS;AAAE,gBAAI,CAACpB,YAAL,CAAkBqB,IAAlB,CAAuBD,GAAvB;AAA8B,SAA3D;;AACA,aAAAS,SAAA,GAAY,UAACT,GAAD,EAAS;AAAE,gBAAI,CAACnB,KAAL,CAAWoB,IAAX,CAAgBD,GAAhB;AAAuB,SAA9C;;AACA,aAAAU,YAAA,GAAe,UAACV,GAAD,EAAS;AAAE,gBAAI,CAAClB,SAAL,CAAemB,IAAf,CAAoBD,GAApB;AAA2B,SAArD;;AACA,aAAAW,YAAA,GAAe,UAACX,GAAD,EAAS;AAAE,gBAAI,CAAChB,SAAL,CAAeiB,IAAf,CAAoBD,GAApB;AAA2B,SAArD;;AACA,aAAA/B,gBAAA,GAAmB,UAAC+B,GAAD,EAAS;AAAE,gBAAI,CAACf,aAAL,CAAmBgB,IAAnB,CAAwBD,GAAxB;AAA+B,SAA7D,CApDsB,CAsDxB;;;AACE,aAAAY,KAAA,GAAQ,YAAM;AACZ,gBAAI,CAACtC,UAAL,CAAgB2B,IAAhB,CAAqB,IAArB;;AACA,gBAAI,CAACjG,QAAL,CAAciG,IAAd,CAAmB,EAAnB;;AACA,gBAAI,CAAC/F,MAAL,CAAY+F,IAAZ,CAAiB,CAAjB;;AACA,gBAAI,CAAC1B,QAAL,CAAc0B,IAAd,CAAmB,IAAnB;;AACA,gBAAI,CAACvB,SAAL,CAAeuB,IAAf,CAAoB,IAApB;;AACA,gBAAI,CAACzB,QAAL,CAAcyB,IAAd,CAAmB,IAAnB;;AACA,gBAAI,CAACxB,QAAL,CAAcwB,IAAd,CAAmB,IAAnB;;AACA,gBAAI,CAACtB,SAAL,CAAesB,IAAf,CAAoB,IAApB;;AACA,gBAAI,CAAClB,QAAL,CAAckB,IAAd,CAAmB,IAAnB;;AACA,gBAAI,CAACjB,SAAL,CAAeiB,IAAf,CAAoB,IAApB;;AACA,gBAAI,CAACpB,KAAL,CAAWoB,IAAX,CAAgB,IAAhB;;AACA,gBAAI,CAACnB,SAAL,CAAemB,IAAf,CAAoB,IAApB;AACD,SAbD,CAvDsB,CAsExB;AACE;AAEF;;;AACE,aAAAY,YAAA,GAAe,UAAC9J,EAAD,EAAgB;AAC7B,cAAMsB,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAA0B,qBAAqB/J,EAA/C,EAAmD;AAC3DgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADkD,WAAnD,CAAZ;;AAMA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAqF,YAAA,GAAe,UAACsD,GAAD,EAAiB;AAC9B,cAAM3I,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,qBAApB,EAA2C,MAAF,OAAE,CAAF,EAAE,EAAID,GAAJ,CAA3C,EAAqD;AAC7DD,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADoD,WAArD,CAAZ;;AAMA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAA6I,iBAAA,GAAoB,UAACF,GAAD,EAAiB;AACnC,cAAM3I,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,6BAApB,EAAmD,MAAF,OAAE,CAAF,EAAE,EAAID,GAAJ,CAAnD,EAA6D;AACvED,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD8D,WAA7D,CAAZ;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CA9FsB,CAsGxB;;;AACE,aAAA8I,SAAA,GAAY,UAACnB,GAAD,EAAkB;AAC5B,cAAM3H,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAqB,iBAAiBd,GAAtC,EAA2C;AACnDe,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AAD0C,WAA3C,CAAZ;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CAvGsB,CAgHxB;;;AACE,aAAA+I,SAAA,GAAY,UAACrK,EAAD,EAAgB;AAC1B,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAwB,2BAA2B/J,EAAnD,EAAuD;AAChEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAgJ,cAAA,GAAiB,UAACC,GAAD,EAAS;AACxB,cAAM3G,IAAI,GAAG;AACXtC,eAAG,EAAEiJ,GAAG,CAACC,IAAJ,CAAS,GAAT;AADM,WAAb;;AAGA,cAAMlJ,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAA2B,gBAA3B,EAA6CtG,IAA7C,EAAmD;AAC5DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADmD,WAAnD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAVD;;AAYA,aAAAmJ,WAAA,GAAc,UAACtH,MAAD,EAASuH,IAAT,EAAkB;AAC9B,cAAM9G,IAAI,GAAG;AACXT,kBAAM,EAANA,MADW;AAEXuH,gBAAI,EAAJA;AAFW,WAAb;;AAIA,cAAMpJ,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAyB,oBAAzB,EAA+CtG,IAA/C,EAAqD;AAC9DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADqD,WAArD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAXD;;AAaA,aAAAqJ,UAAA,GAAa,UAAC3K,EAAD,EAAQ;AACnB,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,WAA2B,uBAAuBvD,EAAlD,EAAsD;AAC/DgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADsD,WAAtD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CAnJsB,CA4JxB;;;AACE,aAAAsJ,UAAA,GAAa,UAAC5K,EAAD,EAAgB;AAC3B,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAA0B,4BAA4B/J,EAAtD,EAA0D;AACnEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AAD0D,WAA1D,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAuJ,eAAA,GAAkB,UAACN,GAAD,EAAS;AACzB,cAAM3G,IAAI,GAAG;AACXtC,eAAG,EAAEiJ,GAAG,CAACC,IAAJ,CAAS,GAAT;AADM,WAAb;;AAGA,cAAMlJ,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAA2B,iBAA3B,EAA8CtG,IAA9C,EAAoD;AAC7DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADoD,WAApD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAVD;;AAYA,aAAAwJ,YAAA,GAAe,UAAC3H,MAAD,EAAS4H,KAAT,EAAmB;AAChC,cAAMnH,IAAI,GAAG;AACXT,kBAAM,EAANA,MADW;AAEX4H,iBAAK,EAALA;AAFW,WAAb;;AAIA,cAAMzJ,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAA2B,sBAA3B,EAAmDtG,IAAnD,EAAyD;AAClEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADyD,WAAzD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAXD;;AAaA,aAAA0J,eAAA,GAAkB,UAACC,OAAD,EAAUhB,GAAV,EAAmB;AACnC,cAAMrG,IAAI,GAAG;AACX5D,cAAE,EAAEiK,GAAG,CAACjK,EADG;AAEXkL,mBAAO,EAAEjB,GAAG,CAACiB,OAFF;AAGXC,iBAAK,EAAElB,GAAG,CAACkB,KAHA;AAIXhI,kBAAM,EAAE8G,GAAG,CAAC9G,MAJD;AAKXiI,kBAAM,EAAEH,OAAO,KAAK,MAAZ,GAAqBhB,GAAG,CAACoB,MAAzB,GAAkC,IAL/B;AAMXC,mBAAO,EAAEL,OAAO,KAAK,OAAZ,GAAsBhB,GAAG,CAACoB,MAA1B,GAAmC,IANjC;AAOXA,kBAAM,EAAEJ,OAAO,KAAK,MAAZ,GAAqBhB,GAAG,CAACoB,MAAzB,GAAkC,IAP/B;AAQXE,mBAAO,EAAEN,OAAO,KAAK,OAAZ,GAAsBhB,GAAG,CAACoB,MAA1B,GAAmC,IARjC;AASXG,kBAAM,EAAEvB,GAAG,CAACuB,MATD;AAUXC,iBAAK,EAAExB,GAAG,CAACwB,KAVA;AAWXC,wBAAY,EAAEzB,GAAG,CAACyB,YAXP;AAYXC,gBAAI,EAAE1B,GAAG,CAAC0B;AAZC,WAAb;AAcA,cAAIrK,GAAJ;;AACA,kBAAO2J,OAAP;AACE,iBAAK,OAAL;AACE3J,iBAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,8BAApB,EAAoDtG,IAApD,EAA0D;AAC7DoG,uBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,iDAA+B;AAAhC,iBAAhB;AADoD,eAA1D,CAAP;AAGA;;AACF,iBAAK,MAAL;AACE1I,iBAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,6BAApB,EAAmDtG,IAAnD,EAAyD;AAC5DoG,uBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,iDAA+B;AAAhC,iBAAhB;AADmD,eAAzD,CAAP;AAGA;;AACF,iBAAK,MAAL;AACE1I,iBAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,6BAApB,EAAmDtG,IAAnD,EAAyD;AAC5DoG,uBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,iDAA+B;AAAhC,iBAAhB;AADmD,eAAzD,CAAP;AAGA;;AACF,iBAAK,IAAL;AACE1I,iBAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,qBAApB,EAA2CtG,IAA3C,EAAiD;AACpDoG,uBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,iDAA+B;AAAhC,iBAAhB;AAD2C,eAAjD,CAAP;AAGA;;AACF,iBAAK,OAAL;AACE1I,iBAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,8BAApB,EAAoDtG,IAApD,EAA0D;AAC7DoG,uBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,iDAA+B;AAAhC,iBAAhB;AADoD,eAA1D,CAAP;AAGA;;AACF;AACE;AA3BJ;;AA8BA,iBAAO1I,GAAP;AACD,SA/CD;;AAiDA,aAAAsK,eAAA,GAAkB,UAACX,OAAD,EAAUY,KAAV,EAAoB;AACpC,cAAMjI,IAAI,GAAG;AACX5D,cAAE,EAAE6L;AADO,WAAb;AAGA,cAAIvK,GAAJ;;AACA,kBAAO2J,OAAP;AACE,iBAAK,OAAL;AACE;AACA3J,iBAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,iCAA+BsI,KAArD,CAAP;AACA;;AACF,iBAAK,MAAL;AACE;AACAvK,iBAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,gCAA8BsI,KAApD,CAAP;AACA;AACA;;AACF,iBAAK,MAAL;AACE;AACAvK,iBAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,gCAA8BsI,KAApD,CAAP;AACA;;AACF,iBAAK,IAAL;AACE;AACAvK,iBAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,8BAA4BsI,KAAlD,CAAP;AACA;;AACF,iBAAK,OAAL;AACE;AACAvK,iBAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,iCAA+BsI,KAArD,CAAP;AACA;;AACF;AACE;AAvBJ;;AAyBA,iBAAOvK,GAAP;AACD,SA/BD,CAhPsB,CAiRxB;;;AACE,aAAAwK,SAAA,GAAY,UAAC9L,EAAD,EAAgB;AAC1B;AACA,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAqB,2BAA2B/J,EAAhD,EAAoD;AAC7DgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADoD,WAApD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD,CAlRsB,CA4RxB;;;AACE,aAAAyK,UAAA,GAAa,UAAC/L,EAAD,EAAgB;AAC7B;AACE,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAA0B,4BAA4B/J,EAAtD,EAA0D;AACnEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AAD0D,WAA1D,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAA0K,QAAA,GAAW,UAACC,GAAD,EAAMhC,GAAN,EAAc;AACvB,cAAMrG,IAAI,GAAG;AACX5D,cAAE,EAAEiK,GAAG,CAACsB,OADG;AAEXW,qBAAS,EAAEjC,GAAG,CAACiC,SAFJ;AAGXC,kBAAM,EAAElC,GAAG,CAACkC,MAHD;AAIXC,qBAAS,EAAEnC,GAAG,CAACmC,SAJJ;AAKXC,sBAAU,EAAEpC,GAAG,CAACoC,UALL;AAMXlJ,kBAAM,EAAE8I;AANG,WAAb,CADuB,CASvB;;AACA,cAAM3K,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,gBAApB,EAAsCtG,IAAtC,EAA4C;AACpDoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,6CAA+B;AAAhC,aAAhB;AAD2C,WAA5C,CAAZ;;AAGA,iBAAO1I,GAAP;AACD,SAdD;;AAgBA,aAAAgL,aAAA,GAAgB,UAAC1I,IAAD,EAAc;AAC5B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUgJ,GAAV,CAAmB,6BAAnB,EAAkD3I,IAAlD,EAAwD;AACnEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD0D,WAAxD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CAvTsB,CA+TxB;;;AACE,aAAAkL,aAAA,GAAgB,UAACxM,EAAD,EAAgB;AAC9B;AACA,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAyB,2BAA2B/J,EAApD,EAAwD;AACjEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADwD,WAAxD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAmL,YAAA,GAAe,UAAC7I,IAAD,EAAc;AAC3B;AACA,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAApB,EAAiDtG,IAAjD,EAAuD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAoL,eAAA,GAAkB,UAAC1M,EAAD,EAAgB;AAChC;AACA,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,WAA4B,iCAAiCvD,EAA7D,EAAiE;AAC1EgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADiE,WAAjE,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAqL,YAAA,GAAe,UAAC/I,IAAD,EAAc;AAC3B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUgJ,GAAV,CAAmB,oCAAnB,EAAyD3I,IAAzD,EAA+D;AAC1EoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADiE,WAA/D,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CA9VsB,CAsWxB;;;AACE,aAAAsL,MAAA,GAAS,UAAC5M,EAAD,EAAgB;AACvB;AACA,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAyB,wBAAwB/J,EAAjD,EAAqD;AAC9DgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADqD,WAArD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AASA,aAAAuL,UAAA,GAAa,UAAC7M,EAAD,EAAgB;AAC3B;AACA,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAyB,4BAA4B/J,EAArD,EAAyD;AAClEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADyD,WAAzD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AASA,aAAAwL,UAAA,GAAa,UAAClJ,IAAD,EAAc;AACzB,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUgJ,GAAV,CAAmB,4BAAnB,EAAiD3I,IAAjD,EAAuD;AAClEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADyD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AAQA,aAAAyL,QAAA,GAAW,UAACd,GAAD,EAAMhC,GAAN,EAAc;AACvB,cAAMrG,IAAI,GAAG;AACX5D,cAAE,EAAEiK,GAAG,CAAC0B,IADG;AAEXqB,kBAAM,EAAE/C,GAAG,CAAC+C,MAFD;AAGX7J,kBAAM,EAAE8I;AAHG,WAAb;;AAKA,cAAM3K,GAAG,GAAG,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,yBAApB,EAA+CtG,IAA/C,EAAqD;AAC7DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAC,6CAA+B;AAAhC,aAAhB;AADoD,WAArD,CAAZ;;AAGA,iBAAO1I,GAAP;AACD,SAVD,CAjYsB,CA6YxB;;;AACE,aAAA2L,QAAA,GAAW,UAAC9J,MAAD,EAAiB+C,MAAjB,EAAoC;AAC7C,cAAMtC,IAAI,GAAG;AAAET,kBAAM,EAANA,MAAF;AAAU+C,kBAAM,EAANA;AAAV,WAAb;;AACA,cAAM5E,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAApB,EAAiDtG,IAAjD,EAAuD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD,CA9YsB,CAuZxB;;;AACE,aAAA4L,QAAA,GAAW,UAAC/J,MAAD,EAAiBgK,MAAjB,EAAoC;AAC7C,cAAMvJ,IAAI,GAAG;AACXT,kBAAM,EAAEA,MADG;AAEXgK,kBAAM,EAAEA;AAFG,WAAb;;AAIA,cAAM7L,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAApB,EAAiDtG,IAAjD,EAAuD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAXD,CAxZsB,CAoaxB;;;AACE,aAAA8L,UAAA,GAAa,UAACjK,MAAD,EAAiBkK,IAAjB,EAAkC;AAC7C,cAAMzJ,IAAI,GAAG;AACXT,kBAAM,EAAEA,MADG;AAEXkK,gBAAI,EAAEA;AAFK,WAAb;;AAIA,cAAM/L,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,6BAApB,EAAmDtG,IAAnD,EAAyD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAzD,CAAb;;AAKE,iBAAO1I,GAAP;AACH,SAXD,CArasB,CAkbxB;;;AACE,aAAAgM,SAAA,GAAY,UAACnK,MAAD,EAAmB;AAC7B,cAAM7B,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAmB,6BAA6B5G,MAAM,CAACoK,QAAP,EAAhD,EAAmE;AAC5EvD,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADmE,WAAnE,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAkM,cAAA,GAAiB,UAACC,MAAD,EAAoB;AACnC,cAAMnM,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAmB,6BAA6B0D,MAAhD,EAAwD;AACnEzD,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD0D,WAAxD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAoM,aAAA,GAAgB,UAAC9J,IAAD,EAAc;AAC5B;AACA,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,6BAApB,EAAmDtG,IAAnD,EAAyD;AAClEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADyD,WAAzD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAqM,WAAA,GAAc,UAAC/J,IAAD,EAAc;AAC1B;AACA,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAApB,EAAiDtG,IAAjD,EAAuD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADuD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SARD;;AAUA,aAAAsM,gBAAA,GAAmB,UAAChK,IAAD,EAAc;AAC/B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,uBAApB,EAA6CtG,IAA7C,EAAmD;AAC9DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADqD,WAAnD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAuM,cAAA,GAAiB,UAACjK,IAAD,EAAc;AAC7B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAApB,EAAiDtG,IAAjD,EAAuD;AAClEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADyD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAwM,gBAAA,GAAmB,UAACL,MAAD,EAAoB;AACrC,cAAMnM,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,2BAA2BuD,MAA/C,EAAuD;AAClEzD,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADyD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAyM,cAAA,GAAiB,UAAC/N,EAAD,EAAgB;AAC/B,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,+BAA+BlK,EAAnD,EAAuD;AAClEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADyD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAA0M,gBAAA,GAAmB,UAACpK,IAAD,EAAc;AAC/B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUgJ,GAAV,CAAmB,4BAAnB,EAAiD3I,IAAjD,EAAuD;AAClEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADyD,WAAvD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAA2M,iBAAA,GAAoB,UAACrK,IAAD,EAAc;AAChC,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUgJ,GAAV,CAAmB,8BAAnB,EAAmD3I,IAAnD,EAAyD;AACpEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD2D,WAAzD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CAtgBsB,CA8gBxB;;;AACE,aAAA4M,WAAA,GAAc,UAAClO,EAAD,EAAgB,CAC7B,CADD,CA/gBsB,CAihBxB;;;AACE,aAAAmO,UAAA,GAAa,UAAChL,MAAD,EAAmB;AAC9B,cAAM7B,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAAmB,8BAA8B5G,MAAM,CAACoK,QAAP,EAAjD,EAAoE;AAC7EvD,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADoE,WAApE,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAA8M,WAAA,GAAc,UAACxK,IAAD,EAAc;AAC1B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,uBAApB,EAA6CtG,IAA7C,EAAmD;AAC9DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADqD,WAAnD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAA+M,gBAAA,GAAmB,UAACC,KAAD,EAAgBC,OAAhB,EAAiC;AAClD,gBAAI,CAAClH,MAAL,CAAYmH,IAAZ,CAAiBF,KAAjB,EAAwBC,OAAxB;AACD,SAFD;;AAIA,aAAAE,WAAA,GAAc,UAAC7K,IAAD,EAAc;AAC1B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,yBAApB,EAA+CtG,IAA/C,EAAqD;AAChEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADuD,WAArD,CAAb;;AAKA,gBAAI,CAAC3C,MAAL,CAAYmH,IAAZ,CAAiB,aAAjB,EAAgC5K,IAAhC;;AACA,iBAAOtC,GAAP;AACD,SARD;;AAUA,aAAAoN,WAAA,GAAc,UAAC9K,IAAD,EAAc;AAC1B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,0BAApB,EAAgDtG,IAAhD,EAAsD;AACjEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADwD,WAAtD,CAAb;;AAKA,gBAAI,CAAC3C,MAAL,CAAYmH,IAAZ,CAAiB,aAAjB,EAAgC5K,IAAhC;;AACA,iBAAOtC,GAAP;AACD,SARD;;AAUA,aAAAqN,WAAA,GAAc,UAAC3O,EAAD,EAAgB;AAC5B,cAAMsB,GAAG,GAAI,MAAI,CAACiC,IAAL,WAAsB,8BAA8BvD,EAApD,EAAwD;AACnEgK,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD0D,WAAxD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD,CA5jBsB,CAqkBxB;;;AACI,aAAA2F,cAAA,GAAiB,YAAM;AACrB,cAAM3F,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAUwG,GAAV,CAA0B,kBAA1B,EAA8C;AACzDC,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,6CAA+B;AADN,aAAhB;AADgD,WAA9C,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;AArkBC,O,CAoCL;;;;;eACE,sBAAa2H,GAAb,EAA0B;AAAE,eAAK3B,SAAL,CAAe4B,IAAf,CAAoBD,GAApB;AAA2B;;;eACvD,mBAAUA,GAAV,EAAuB;AAAE,eAAK9F,MAAL,CAAY+F,IAAZ,CAAiBD,GAAjB;AAAwB;;;eAEjD,qBAAYA,GAAZ,EAAyB;AAAE,eAAKhG,QAAL,CAAciG,IAAd,CAAmBD,GAAnB;AAA0B;;;;;;;uBA5C5C7B,e,EAAe,uH,EAAA,4G;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVwH,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACpL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,W;;;AAEX,2BAAoBtL,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAEZ,aAAAuL,IAAA,GAAO,IAAI,oDAAJ,CAA2B,EAA3B,CAAP,CAF8B,CAItC;;AACA,aAAA1N,OAAA,GAAU,KAAK0N,IAAL,CAAU1G,YAAV,EAAV;;AAKA,aAAA/D,SAAA,GAAY,UAACT,IAAD,EAAe;AACzB,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,YAApB,EAAkCtG,IAAlC,EAAwC;AACnDoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AAD0C,WAAxC,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAA8D,aAAA,GAAgB,UAACxB,IAAD,EAAc;AAC5B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,0BAApB,EAAgDtG,IAAhD,EAAsD;AACjEoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADwD,WAAtD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAiE,UAAA,GAAc,UAAC3B,IAAD,EAAc;AAC1B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,uBAApB,EAA6CtG,IAA7C,EAAmD;AAC9DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADqD,WAAnD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;;AASA,aAAAwD,WAAA,GAAe,UAAClB,IAAD,EAAc;AAC3B,cAAMtC,GAAG,GAAI,MAAI,CAACiC,IAAL,CAAU2G,IAAV,CAAoB,wBAApB,EAA8CtG,IAA9C,EAAoD;AAC/DoG,mBAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,6CAA+B;AADR,aAAhB;AADsD,WAApD,CAAb;;AAKA,iBAAO1I,GAAP;AACD,SAPD;AArCyC,O,CAOzC;;;;;eACA,iBAAQ2H,GAAR,EAAa;AAAE,eAAK6F,IAAL,CAAU5F,IAAV,CAAeD,GAAf;AAAsB;;;;;;;uBAV1B4F,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMG,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1BlN,aAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,qEAAtC;AACA;AACD;;AAED,gFAAyBkN,eAAzB,CAAyC,yDAAzC,WACS,UAAA1K,GAAG;AAAA,aAAIzC,OAAO,CAACoN,KAAR,CAAc3K,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent} from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'charGen', loadChildren: () => import('./chargen/chargen.module').then(m => m.ChargenModule) },\r\n  {path: 'charLoad', loadChildren: () => import('./charload/charload.module').then(m => m.CharloadModule) },\r\n  {path: 'newChar', loadChildren: () => import('./newChar/new-char.module').then(m => m.NewCharModule) },\r\n  {path: 'party', loadChildren: () => import('./party/party.module').then(m => m.PartyModule) },\r\n  {path: '', component: HomeComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CharDataService } from './services/char-data.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from './services/user.service';\r\nimport { PartyMember } from './services/party.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy{\r\n  title = 'character Manager';\r\n  theUser = {};\r\n  userName: string;\r\n  isLoggedIn = false;\r\n  subs: Subscription[] = [];\r\n  currentMenber: PartyMember;\r\n\r\n  constructor(\r\n    private charDataSvc: CharDataService,\r\n    private userService: UserService,\r\n    // private socketService: SocketService\r\n  ){}\r\n\r\n    ngOnInit(): void {\r\n      this.userService.getUser.subscribe( val => {\r\n        this.theUser = val;\r\n        this.isLoggedIn = this.theUser['isLoggedIn'];\r\n        this.userName = this.theUser['userName'];\r\n      });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      this.subs.forEach( (s: Subscription) => s.unsubscribe());\r\n    }\r\n}\r\n","<div class=\"content\" role=\"main\">\r\n  <div class=\"ui secondary pointing menu\">\r\n    <a routerLink='' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Home</a>\r\n    <a *ngIf='isLoggedIn' routerLink='charLoad' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Load Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='charGen' routerLinkActive='active' class=\"item\" >Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='newChar' routerLinkActive='active' class=\"item\" >New Character</a>\r\n    <a *ngIf='isLoggedIn' routerLink='party/search' routerLinkActive='active' class=\"item\" >Party</a>\r\n    <div class=\"item\" style='position: absolute; right:0px;'>Welcome {{theUser['userName']}}</div>\r\n  </div>\r\n  <div class=\"ui segment container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewCharComponent } from './newChar/new-char/new-char.component';\r\nimport { ChargenHomeComponent } from './chargen/chargen-home/chargen-home.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSnackBar} from '@angular/material/snack-bar';\r\nimport { OverlayModule  } from '@angular/cdk/overlay';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { SocketIoConfig, SocketIoModule } from 'ngx-socket-io';\r\n\r\nconsole.log(document.location.hostname)\r\nconst protocol =  document.location.hostname.includes('localhost') ? 'ws' : 'wss';\r\nconst config: SocketIoConfig = {\r\n  url: `${protocol}://${document.location.host}`,\r\n  options: {\r\n    transports: ['websocket'],\r\n    upgrade : true,\r\n    path: ''\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NewCharComponent,\r\n    ChargenHomeComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    OverlayModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    SocketIoModule.forRoot(config),\r\n\r\n  ],\r\n  providers: [MatSnackBar],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CharDataService } from '../../services/char-data.service';\r\n\r\n@Component({\r\n  selector: 'app-chargen-home',\r\n  templateUrl: './chargen-home.component.html',\r\n  styleUrls: ['./chargen-home.component.css']\r\n})\r\nexport class ChargenHomeComponent implements OnInit {\r\n  charID: number;\r\n  charName: string;\r\n\r\n  constructor(private charDataSvc: CharDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.charDataSvc.getCharID.subscribe( (val) => this.charID = val);\r\n    this.charDataSvc.getCharName.subscribe( (val) => this.charName = val);\r\n  }\r\n\r\n  titleValue = () => {\r\n    return this.charName;\r\n  }\r\n\r\n}\r\n","<h1>{{titleValue()}}</h1>\r\n<div class=\"ui secondary pointing menu wrapTabs\">\r\n  <a routerLink='./' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Class and Race</a>\r\n  <a routerLink='stats' class=\"item\" routerLinkActive='active' [routerLinkActiveOptions]=\"{exact:true}\">Stats</a>\r\n  <a routerLink='ac' routerLinkActive='active' class=\"item\">AC</a>\r\n  <a routerLink='tohits' routerLinkActive='active' class=\"item\">To Hits</a>\r\n  <a routerLink='saves' routerLinkActive='active' class=\"item\">Saves</a>\r\n  <a routerLink='skills' routerLinkActive='active' class=\"item\">Skills</a>\r\n  <a routerLink='feats' routerLinkActive='active' class=\"item\">Feats</a>\r\n  <a routerLink='equip' routerLinkActive='active' class=\"item\">Equipment</a>\r\n  <a routerLink='spells' routerLinkActive='active' class=\"item\">Spells</a>\r\n  <a routerLink='expendables' routerLinkActive='active' class=\"item\">Expendables</a>\r\n  <a routerLink='notes' routerLinkActive='active' class=\"item\">Notes</a>\r\n</div>\r\n<div class=\"ui segment\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { UserService } from '../services/user.service';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isLoggedIn: boolean;\r\n  isForced: boolean;\r\n  theUser;\r\n  userName: string;\r\n  password:string;\r\n  emailAddress: string;\r\n  newPassword: string;\r\n  confPassword: string;\r\n  modForm;\r\n  restForm;\r\n  isNewUser: boolean;\r\n  @ViewChild('confPasswordField') confPasswordField: ElementRef;\r\n  constructor(private userService: UserService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private _snackBar: MatSnackBar ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isNewUser = document.location.pathname === '/newUser';\r\n    this.isForced = false;\r\n    this.userService.getUser.subscribe( val => this.theUser = val);\r\n    this.isLoggedIn = this.theUser.userEmail !== undefined;\r\n  }\r\n\r\n  onSubmit = evt => {\r\n    evt.preventDefault();\r\n    const body = {\r\n      userEmail: this.userName,\r\n      password: this.password\r\n    }\r\n\r\n    if(this.userName === 'guest' && this.password ==='Gu3st'){\r\n      console.log('guest');\r\n      const guest = {\r\n        forcedReset: false,\r\n        userEmail: \"guest@guest.com\",\r\n        userID: 0,\r\n        userName: \"Guest\",\r\n        userPassword: null,\r\n        isLoggedIn: true\r\n      }\r\n      this.userService.setUser(guest);\r\n      this.router.navigate(['/charLoad']);\r\n      return;\r\n    }\r\n\r\n    this.userService.loginUser(body).subscribe( (val) => {\r\n      this.theUser = val;\r\n      if (this.theUser.forcedReset){\r\n        this.isLoggedIn = true;\r\n        this.isForced = true;\r\n        return;\r\n      } else {\r\n        this.theUser.isLoggedIn = true;\r\n        this.userService.setUser(this.theUser);\r\n        this.router.navigate(['/charLoad']);\r\n      }\r\n    },\r\n    err => {\r\n      this._snackBar.open('Invalid Login. Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    })\r\n  }\r\n\r\n  onReSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (this.newPassword !== this.confPassword){\r\n      this.confPassword = '';\r\n      this.confPasswordField.nativeElement.focus()\r\n      this._snackBar.open('Passwords did not match, Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      return;\r\n    }\r\n    const body = {\r\n      userName: this.emailAddress,\r\n      password: this.newPassword,\r\n      userID: this.theUser.userID\r\n    };\r\n\r\n    this.userService.resetPassword(body).subscribe( (val) => {\r\n      const aValue: {} = val;\r\n      if (aValue['status'] === 'done') {\r\n        this.theUser.isLoggedIn = true;\r\n        this.theUser.forcedReset = false;\r\n        this.userService.setUser(this.theUser);\r\n        this.isForced = false;\r\n        this.isLoggedIn = true;\r\n        this.router.navigate(['/charLoad']);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreate = (evt) => {\r\n    if (this.newPassword !== this.confPassword){\r\n      this.confPassword = '';\r\n      this.confPasswordField.nativeElement.focus()\r\n      this._snackBar.open('Passwords did not match, Try Again', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n      return;\r\n    }\r\n    const body = {\r\n      userName: this.userName,\r\n      password: this.newPassword,\r\n      userEmail: this.emailAddress\r\n    };\r\n    this.userService.insertUser(body).subscribe( val => {\r\n      this.theUser = val;\r\n      this.theUser.userPassword = null;\r\n      this.userService.setUser(this.theUser);\r\n      this.router.navigate(['/charLoad']);\r\n    });\r\n  }\r\n\r\n  resendPassword = () =>{\r\n    const tempEmail = this.userName;\r\n    this.userName = '';\r\n    console.log(tempEmail);\r\n    const body = {\r\n      userEmail: tempEmail\r\n    }\r\n    this.userService.newPassword(body).subscribe(val => {\r\n      this._snackBar.open('Password reset. Check your email', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    },\r\n    err => {\r\n      this._snackBar.open('Email not found in database', '', {\r\n        duration: 2000,\r\n        horizontalPosition: 'center',\r\n        verticalPosition: 'top',\r\n        panelClass: ['red-snackbar']\r\n      });\r\n    });\r\n  }\r\n}\r\n","<h1>Pathfinder Character Management System</h1>\r\n<div class=\"ui grid\">\r\n  <div class=\"ten wide column\">\r\n    <p>Change This application allows for easy storage and access to all aspects of a Pathfinder character. All characters are visible to all users but you can only edit characters that you control.</p>\r\n    <p>Once you log in the top navigation bar will have an option to load a character or view details for a loaded character. Character details include Stats, To hits, Armor Class, Saves, Skills, Feats, Notes, Equipment, and Memorized Spells.</p>\r\n    <p>DO NOT click on the refesh browser window as it will drop your token and you will need to log in again. To reload the page simply click on the tab you are currently viewing. The back and forward arrows of the browser work. </p>\r\n  </div>\r\n  <div class=\"six wide column\">\r\n    <form class=\"ui large form\" #modForm='ngForm' (ngSubmit)='onSubmit($event)' *ngIf='!isLoggedIn && !isNewUser'>\r\n      <div #formRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"email\" [(ngModel)]='userName' placeholder=\"E-mail address\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"password\"  [(ngModel)]='password' placeholder=\"Password\">\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Login</button>\r\n          <p style='margin:12px 0'>Forgot your password? Type your email address in the email address field and click the button below.</p>\r\n          <button class=\"ui fluid large primary button\" type=\"button\" (click)='resendPassword()'>Forgot Password</button>\r\n        </div>\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n\r\n    <form class=\"ui large form\" #restForm='ngForm' (ngSubmit)='onReSubmit($event)' *ngIf='isForced'>\r\n      <div #restFormRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <h1>Password Reset</h1>\r\n          <p>You must reset your password before proceeding.</p>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"newPassword\"  [(ngModel)]='newPassword' placeholder=\"New Password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"confPassword\"  [(ngModel)]='confPassword' placeholder=\"Verify Password\" #confPasswordField>\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Save</button>\r\n        </div>\r\n\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n\r\n    <form class=\"ui large form\" #restForm='ngForm' (ngSubmit)='onCreate($event)' *ngIf='isNewUser'>\r\n      <div #restFormRoot >\r\n        <div class=\"ui stacked segment\">\r\n          <h1>New User</h1>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"userName\"  [(ngModel)]='userName' placeholder=\"User's Name\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"user icon\"></i>\r\n              <input type=\"text\" name=\"emailAddress\"  [(ngModel)]='emailAddress' placeholder=\"Email Address\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"newPassword\"  [(ngModel)]='newPassword' placeholder=\"New Password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"field\">\r\n            <div class=\"ui left icon input\">\r\n              <i class=\"lock icon\"></i>\r\n              <input type=\"password\" name=\"confPassword\"  [(ngModel)]='confPassword' placeholder=\"Verify Password\" #confPasswordField>\r\n            </div>\r\n          </div>\r\n          <button class=\"ui fluid large primary button\" type=\"submit\">Save</button>\r\n        </div>\r\n\r\n        <div class=\"ui error message\"></div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { CharDataService } from '../../services/char-data.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport _ from 'lodash';\r\nimport {Stats, Saves} from '../../helpers/enum';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-new-char',\r\n  templateUrl: './new-char.component.html',\r\n  styleUrls: ['./new-char.component.css']\r\n})\r\nexport class NewCharComponent implements OnInit {\r\n  modForm;\r\n  loggedIn: {};\r\n  charName: string;\r\n  charRace: string;\r\n  charClass: string;\r\n  charAlignment: string;\r\n  charHP: string;\r\n  charLevel: string;\r\n  charStr: string;\r\n  charDex: string;\r\n  charCon: string;\r\n  charInt: string;\r\n  charWis: string;\r\n  charChr: string;\r\n  theAlignments;\r\n\r\n  constructor(private charDataSvc: CharDataService,\r\n    private userDataService: UserService,\r\n    private router: Router,\r\n    private titleService: Title,\r\n    private http: HttpClient ) { }\r\n\r\n    ngOnInit(): void {\r\n      this.userDataService.getUser.subscribe( (val) => this.loggedIn = val);\r\n      this.charDataSvc.getAllAlignment.subscribe( (val) => this.theAlignments = val.results);\r\n      if (!this.theAlignments || this.theAlignments.length === 0){\r\n        this.charDataSvc.loadAlignments().subscribe( val => {\r\n          this.theAlignments = val.results;\r\n          this.charDataSvc.setAllAlignments(val);\r\n        });\r\n      }\r\n      this.titleService.setTitle('Create Character');\r\n    }\r\n    onCancel = evt =>{\r\n      console.log('evt')\r\n      this.router.navigate(['/charLoad']);\r\n    }\r\n\r\n    onSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      const body = {\r\n        userID: this.loggedIn['userID'],\r\n        charName: this.charName,\r\n        charHP: this.charHP,\r\n        raceID: this.charRace,\r\n        alignID: this.charAlignment,\r\n        classID: this.charClass,\r\n        classLvl: this.charLevel\r\n      };\r\n      this.charDataSvc.addCharacter(body).subscribe(vals => {\r\n        this.router.navigate(['/charLoad']);\r\n      });\r\n    }\r\n  }\r\n","<h1>New Character</h1>\r\n<form class=\"ui large form\" #modForm='ngForm' (ngSubmit)='onSubmit($event)'>\r\n  <div>\r\n    <div class='ui grid gridRow'>\r\n      <div  class=\"column sixteen wide ui input\" >\r\n        <label for=\"charName\">Name</label>\r\n        <input type='text' name='charName' [(ngModel)]='charName' >\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charRace\">Race</label>\r\n        <select name=\"charRace\"  [(ngModel)]='charRace'>\r\n          <option value=\"12\">Dragonborn</option>\r\n          <option value=\"1\">Dwarf</option>\r\n          <option value=\"2\">Elf</option>\r\n          <option value=\"3\">Gnome</option>\r\n          <option value=\"4\">Halfling</option>\r\n          <option value=\"5\">Half-elf</option>\r\n          <option value=\"6\">Half-orc</option>\r\n          <option value=\"7\">Human</option>\r\n          <option value=\"11\">Tiefling</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\" style=\"width: calc(100% / 3);\">\r\n        <label for=\"charClass\">Class</label>\r\n        <select name=\"charClass\" [(ngModel)]='charClass'>\r\n          <option value=\"0\">Select One</option>\r\n          <option value=\"1\">Barbarian</option>\r\n          <option value=\"2\">Bard</option>\r\n          <option value=\"3\">Cleric</option>\r\n          <option value=\"4\">Druid</option>\r\n          <option value=\"5\">Fighter</option>\r\n          <option value=\"6\">Monk</option>\r\n          <option value=\"7\">Paladin</option>\r\n          <option value=\"8\">Ranger</option>\r\n          <option value=\"9\">Rogue</option>\r\n          <option value=\"10\">Sorcerer</option>\r\n          <option value=\"13\">Sorceress</option>\r\n          <option value=\"11\">Wizard</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charLevel\">Level</label>\r\n        <input type='number' name='charLevel' class='spellInput' [(ngModel)]='charLevel'>\r\n      </div>\r\n      <div class='ui grid gridRow' style=\"width: 100%; margin-bottom: 14px;\">\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charAlignment\">Alignment</label>\r\n          <select name=\"charAlignment\" [(ngModel)]='charAlignment'>\r\n            <option value=\"0\"></option>\r\n            <option *ngFor='let al of theAlignments' value={{al.alignID}}>{{al.alignName}}</option>\r\n          </select>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charHP\">Hit Points</label>\r\n          <input type='number' name='charHP' class='spellInput' [(ngModel)]='charHP'>\r\n        </div>\r\n      </div>\r\n      <!--\r\n      <h1>Base Stats - do not include racial benefits. </h1>\r\n      <div class='ui grid gridRow'>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charStr\">Strength</label>\r\n          <input type='number' name='charStr' [(ngModel)]='charStr'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charDex\">Dexterity</label>\r\n          <input type='number' name='charDex' [(ngModel)]='charDex'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charCon\">Constitution</label>\r\n          <input type='number' name='charCon' [(ngModel)]='charCon'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charInt\">Intelligence</label>\r\n          <input type='number' name='charInt' [(ngModel)]='charInt'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charWis\">Wisdom</label>\r\n          <input type='number' name='charWis' [(ngModel)]='charWis'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charChr\">Chraisma</label>\r\n          <input type='number' name='charChr' [(ngModel)]='charChr'>\r\n        </div>\r\n      </div>\r\n      -->\r\n    </div>\r\n  </div>\r\n  <div class=\"container\" style='text-align: center; margin-top:24px'>\r\n    <button class='ui primary button' type=\"submit\">Save</button>\r\n    <button class='ui yellow button' type=\"button\" style=\"margin-left:24px\" (click)='onCancel($event)'>Cancel</button>\r\n  </div>\r\n</form>\r\n","import { Injectable, ɵɵresolveBody } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\nexport interface CharBasics {\r\n  charID: string;\r\n  results: {\r\n    charID: number;\r\n    charName: string;\r\n    charHP: number;\r\n    charXP: number;\r\n    init: number;\r\n    userID: number;\r\n    isDead: boolean;\r\n    Alignment: {\r\n      alignID: number;\r\n      alignName: string;\r\n    },\r\n    Race: {\r\n      raceID: number;\r\n      raceDesc: string;\r\n    },\r\n    CharLevels: {\r\n      classLevel: number;\r\n      CharClass: {\r\n        className: string;\r\n        classID: number;\r\n      }\r\n    }[]\r\n  };\r\n}\r\n\r\nexport interface Stat {\r\n  statID: number;\r\n  score: number;\r\n  isBase: boolean;\r\n  isMod: boolean;\r\n  modDesc: string;\r\n}\r\ninterface Stats {\r\n  charID: string;\r\n  results: Stat[];\r\n}\r\n\r\nexport interface Save {\r\n  id: number;\r\n  saveID: number;\r\n  score: number;\r\n  isBase: boolean;\r\n  isMod: boolean;\r\n  modDesc: string;\r\n  Save: {\r\n    saveDesc: string;\r\n  }\r\n}\r\ninterface Saves {\r\n  charID: string;\r\n  results: Save[];\r\n}\r\n\r\nexport interface Spell {\r\n  id: number;\r\n  spellID: number;\r\n  charID: number;\r\n  spellLevel: number;\r\n  spellName: string;\r\n  isCast: boolean;\r\n}\r\ninterface Spells {\r\n  charID: string;\r\n  results: Spell[];\r\n}\r\n\r\nexport interface ToHit {\r\n  name: string,\r\n}\r\ninterface CharToHits {\r\n  charID: string;\r\n  results: ToHit[];\r\n}\r\n\r\nexport interface Feat {\r\n  benefit: string;\r\n  id: number;\r\n  name: string;\r\n  normal: string;\r\n  prerequisites: string;\r\n  prerequisitie_feats: string;\r\n  shortdescription: string;\r\n  special: string;\r\n}\r\ninterface CharFeat {\r\n  charID: string;\r\n  results: Feat[];\r\n}\r\n\r\nexport interface CharSkill {\r\n  skillID: number;\r\n  score: number;\r\n  isRanks: boolean;\r\n  isMod: boolean;\r\n  isClassSkill: boolean;\r\n  modDesc: string;\r\n  Skill: Skill;\r\n}\r\nexport interface Skill {\r\n  skillID: number;\r\n  skillName: string;\r\n  skillAttr: string;\r\n  SkillDesc: string;\r\n  untrained: boolean;\r\n}\r\ninterface CharSkills {\r\n  charID: string;\r\n  results: CharSkill[];\r\n}\r\n\r\ninterface CharClasses {\r\n  results: {\r\n      name: string,\r\n    }[];\r\n}\r\n\r\nexport interface Item {\r\n  id: number;\r\n  charID: number;\r\n  weight: number;\r\n  equip: string;\r\n  location: string;\r\n  equipOrder: number;\r\n}\r\ninterface Equipment {\r\n  charID: number;\r\n  results: Item[];\r\n}\r\n\r\nexport interface ACPart {\r\n  id: number;\r\n  charID: number;\r\n  score: number;\r\n  modDesc: string;\r\n  isBase: boolean;\r\n  isMod: boolean;\r\n}\r\ninterface AC {\r\n  charID: number;\r\n  results: ACPart[];\r\n}\r\n\r\ninterface ACGrps {\r\n  charID: number;\r\n  results:{\r\n    charID: number;\r\n    acID: number;\r\n    sortValue: number;\r\n    acDesc: string;\r\n  }[]\r\n}\r\n\r\nexport interface Note {\r\n  noteID: number;\r\n  noteOrder: number;\r\n  noteTitle: string;\r\n}\r\ninterface Notes {\r\n  charID: string;\r\n  results: Note[];\r\n}\r\n\r\ninterface Alignments {\r\n  results: {\r\n      alignID: string;\r\n      alignName: string;\r\n    }[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharDataService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private socket: Socket\r\n  ) { }\r\n\r\n  // DECLARATIONS\r\n  private curCharID = new BehaviorSubject(0);\r\n  private charID = new BehaviorSubject(0);\r\n  private charBasics = new BehaviorSubject<CharBasics> ({results: {}} as CharBasics);\r\n  private charName = new BehaviorSubject('');\r\n  private allFeats = new BehaviorSubject<CharFeat>( {results: []} as CharFeat );\r\n  private allStats = new BehaviorSubject<Stats>( {results: []} as Stats );\r\n  private allSaves = new BehaviorSubject<Saves>( {results: []} as Saves );\r\n  private allSkills = new BehaviorSubject<CharSkills>( {results: []} as CharSkills );\r\n  private allToHits = new BehaviorSubject<CharToHits>( {results: []} as CharToHits );\r\n  private allEquipment = new BehaviorSubject<Equipment>( {results: []} as Equipment );\r\n  private allAC = new BehaviorSubject<AC>( {results: []} as AC );\r\n  private allACGrps = new BehaviorSubject<ACGrps>( {results: []} as ACGrps );\r\n  private allNotes = new BehaviorSubject<Notes>( {results: []} as Notes);\r\n  private allSpells = new BehaviorSubject<Spells>( {results: []} as Spells);\r\n  private allAlignments = new BehaviorSubject<Alignments>( {results: []} as Alignments);\r\n\r\n  // GETTERS\r\n    getCurCharID = this.curCharID.asObservable();\r\n    getCharID = this.charID.asObservable();\r\n    getCharBasics = this.charBasics.asObservable();\r\n    getCharName = this.charName.asObservable();\r\n    getAllFeats = this.allFeats.asObservable();\r\n    getAllStats = this.allStats.asObservable();\r\n    getAllSaves = this.allSaves.asObservable();\r\n    getAllSkills = this.allSkills.asObservable();\r\n    getAllNotes = this.allNotes.asObservable();\r\n    getAllToHits = this.allToHits.asObservable();\r\n    getAllEquip = this.allEquipment.asObservable();\r\n    getAllACs = this.allAC.asObservable();\r\n    getAllACGrps = this.allACGrps.asObservable();\r\n    getAllSpells = this.allSpells.asObservable();\r\n    getAllAlignment = this.allAlignments.asObservable();\r\n\r\n  // SETTERS\r\n    setCurCharID(arg: number) { this.curCharID.next(arg); }\r\n    setCharID(arg: number) { this.charID.next(arg); }\r\n    setCharBasics = (arg) => { this.charBasics.next(arg); };\r\n    setCharName(arg: string) { this.charName.next(arg); }\r\n    setAllFeats = (arg) => { this.allFeats.next(arg); };\r\n    setStats = (arg) => { this.allStats.next(arg); };\r\n    setSaves = (arg) => { this.allSaves.next(arg); };\r\n    setAllSkills = (arg) => { this.allSkills.next(arg); };\r\n    setAllNotes = (arg) => { this.allNotes.next(arg); };\r\n    setAllToHits = (arg) => { this.allToHits.next(arg); };\r\n    setAllEquipment = (arg) => { this.allEquipment.next(arg); };\r\n    setAllACs = (arg) => { this.allAC.next(arg); };\r\n    setAllACGrps = (arg) => { this.allACGrps.next(arg); };\r\n    setAllSpells = (arg) => { this.allSpells.next(arg); };\r\n    setAllAlignments = (arg) => { this.allAlignments.next(arg); };\r\n\r\n  // global reset\r\n    reset = () => {\r\n      this.charBasics.next(null);\r\n      this.charName.next('');\r\n      this.charID.next(0);\r\n      this.allFeats.next(null);\r\n      this.allSkills.next(null);\r\n      this.allStats.next(null);\r\n      this.allSaves.next(null);\r\n      this.allToHits.next(null);\r\n      this.allNotes.next(null);\r\n      this.allSpells.next(null);\r\n      this.allAC.next(null);\r\n      this.allACGrps.next(null);\r\n    }\r\n\r\n  // remote loaders\r\n    // tslint:disable:max-line-length\r\n\r\n  // CHARACTER\r\n    loadCharBase = (id: string) => {\r\n      const val = this.http.get<CharBasics>('/api/characters/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n\r\n      return val;\r\n    }\r\n\r\n    addCharacter = (obj: object) => {\r\n      const val = this.http.post<any>('/api/characters/new', {...obj}, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n\r\n      return val;\r\n    }\r\n\r\n    insertClassLevels = (obj: object) => {\r\n      const val = this.http.post<any>('/api/characters/updateClass', {...obj}, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // STATS\r\n    loadStats = (arg: number ) => {\r\n      const val = this.http.get<Stats>('/api/stats/ ' + arg, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // FEATS\r\n    loadFeats = (id: string) => {\r\n      const val =  this.http.get<CharFeat>('/api/characters/feats/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadOtherFeats = (arr) => {\r\n      const body = {\r\n        val: arr.join(\",\")\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/feats/all', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    saveNewFeat = (charID, feat) => {\r\n      const body = {\r\n        charID,\r\n        feat\r\n      };\r\n      const val =  this.http.post<CharFeat>('/api/feats/addFeat', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteFeat = (id) => {\r\n      const val =  this.http.delete<CharFeat>('/api/feats/delete/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // SKILLS\r\n    loadSkills = (id: string) => {\r\n      const val =  this.http.get<CharSkills>('/api/characters/skills/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadOtherSkills = (arr) => {\r\n      const body = {\r\n        val: arr.join(\",\")\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/skills/all', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    saveNewSkill = (charID, skill) => {\r\n      const body = {\r\n        charID,\r\n        skill\r\n      };\r\n      const val =  this.http.post<CharSkills>('/api/skills/addSKill', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateAttribute = (attType, obj ) => {\r\n      const body = {\r\n        id: obj.id,\r\n        modDesc: obj.modDesc,\r\n        score: obj.score,\r\n        charID: obj.charID,\r\n        saveID: attType === 'save' ? obj.statID : null,\r\n        skillID: attType === 'skill' ? obj.statID : null,\r\n        statID: attType === 'stat' ? obj.statID : null,\r\n        toHitID: attType === 'tohit' ? obj.statID : null,\r\n        isBase: obj.isBase,\r\n        isMod: obj.isMod,\r\n        isClassSkill: obj.isClassSkill,\r\n        acID: obj.acID,\r\n      };\r\n      let val;\r\n      switch(attType){\r\n        case 'skill':\r\n          val =  this.http.post<any>('/api/characters/updateSkill/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'stat':\r\n          val =  this.http.post<any>('/api/characters/updateStat/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'save':\r\n          val =  this.http.post<any>('/api/characters/updateSave/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'ac':\r\n          val =  this.http.post<any>('/api/characters/ac/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        case 'tohit':\r\n          val =  this.http.post<any>('/api/characters/updateToHit/', body, {\r\n              headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return val;\r\n    }\r\n\r\n    deleteAttribute = (attType, attId) => {\r\n      const body = {\r\n        id: attId,\r\n      };\r\n      let val;\r\n      switch(attType){\r\n        case 'skill':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteSkill/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteSkill/'+attId);\r\n          break;\r\n        case 'stat':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteStat/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteStat/'+attId);\r\n          break;\r\n          break;\r\n        case 'save':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteSave/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteSave/'+attId);\r\n          break;\r\n        case 'ac':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteAC/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteAC/'+attId);\r\n          break;\r\n        case 'tohit':\r\n          //val =  this.http.delete<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteToHit/'+attId);\r\n          val =  this.http.delete<any>('/api/characters/deleteToHit/'+attId);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return val;\r\n    }\r\n\r\n  // SAVES\r\n    loadSaves = (id: string) => {\r\n      //const val =  this.http.get<Saves>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/saves/' + id, {\r\n      const val =  this.http.get<Saves>('/api/characters/saves/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // TO HITS\r\n    loadToHits = (id: string) => {\r\n    //const val =  this.http.get<CharToHits>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/toHits/' + id, {\r\n      const val =  this.http.get<CharToHits>('/api/characters/toHits/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    newToHit = (cID, obj) => {\r\n      const body = {\r\n        id: obj.toHitID,\r\n        toHitDesc: obj.toHitDesc,\r\n        damage: obj.damage,\r\n        critRange: obj.critRange,\r\n        critDamage: obj.critDamage,\r\n        charID: cID,\r\n      }\r\n      //const val = this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/newToHit/', body, {\r\n      const val = this.http.post<any>('/api/newToHit/', body, {\r\n          headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderToHits = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/newToHit/reorderToHits', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // EQUIPMENT\r\n    loadEquipment = (id: number) => {\r\n      //const val =  this.http.get<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/' + id, {\r\n      const val =  this.http.get<Equipment>('/api/characters/equip/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addEquipment = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/characters/equip/add', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteEquipment = (id: number) => {\r\n      //const val =  this.http.delete<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/deleteequip/' + id, {\r\n      const val =  this.http.delete<Equipment>('/api/characters/deleteequip/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderEqiup = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/characters/equip/reorderEquip', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // AC\r\n    loadAC = (id: number) => {\r\n      //const val =  this.http.get<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/ac/' + id, {\r\n      const val =  this.http.get<Equipment>('/api/characters/ac/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n    loadACGrps = (id: number) => {\r\n      //const val =  this.http.get<Equipment>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/ac/' + id, {\r\n      const val =  this.http.get<Equipment>('/api/characters/acGrps/' + id, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n    reorderACs = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/characters/reorderACs', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n    newACGrp = (cID, obj) => {\r\n      const body = {\r\n        id: obj.acID,\r\n        acDesc: obj.acDesc,\r\n        charID: cID,\r\n      }\r\n      const val = this.http.post<any>('/api/characters/new-ac/', body, {\r\n          headers: new HttpHeaders({'Access-Control-Allow-Origin': '*'}),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // HP\r\n    updateHP = (charID: number, charHP: number) => {\r\n      const body = { charID, charHP };\r\n      const val =  this.http.post<any>('/api/characters/updateHP/', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // XP\r\n    updateXP = (charID: number, charXP: number) => {\r\n      const body = {\r\n        charID: charID,\r\n        charXP: charXP\r\n      }\r\n      const val =  this.http.post<any>('/api/characters/updateXP/', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // INITIATIVE\r\n    updateInit = (charID: number, init: number) => {\r\n      const body = {\r\n        charID: charID,\r\n        init: init\r\n      }\r\n      const val =  this.http.post<any>('/api/characters/updateInit/', body, {\r\n            headers: new HttpHeaders({\r\n            'Access-Control-Allow-Origin': '*'\r\n          }),\r\n        });\r\n        return val;\r\n    }\r\n\r\n  // NOTES\r\n    loadNotes = (charID: number) =>{\r\n      const val =  this.http.get<any>('/api/notes/getCharNotes/' + charID.toString(), {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    loadNotesItems = (noteID: string) => {\r\n      const val =  this.http.get<any>('/api/notes/getNoteItems/' + noteID, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addNoteHeader = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/notes/insertNoteHeader', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    addNoteItem = (body: {}) => {\r\n      //const val =  this.http.post<any>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/equip/add', body, {\r\n      const val =  this.http.post<any>('/api/notes/insertNoteItem', body, {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateNoteHeader = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/notes/updateNote', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    updateNoteItem = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/notes/updateNoteItem', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteNoteHeader = (noteID: string) => {\r\n      const val =  this.http.post<any>('/api/notes/deleteNote/' + noteID, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    deleteNoteItem = (id: string) => {\r\n      const val =  this.http.post<any>('/api/notes/deleteNoteItem/' + id, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderNoteItems = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/notes/reorderNoteItem', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    reorderNoteHeader = (body: {}) => {\r\n      const val =  this.http.put<any>('/api/notes/reorderNoteHeader', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n  // CLASSES\r\n    loadClasses = (id: string) => {\r\n    }\r\n  // SPELLS\r\n    loadSpells = (charID: number) =>{\r\n      const val =  this.http.get<any>('/api/spells/getAllSpells/' + charID.toString(), {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    insertSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/addASpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n    broadcastMessage = (event: string, payload: any) => {\r\n      this.socket.emit(event, payload);\r\n    }\r\n\r\n    toggleSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/toggleSpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      this.socket.emit('SPELLUPDATE', body);\r\n      return val;\r\n    }\r\n\r\n    updateSpell = (body: {}) => {\r\n      const val =  this.http.post<any>('/api/spells/updateASpell', body, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      this.socket.emit('CHANGESPELL', body);\r\n      return val;\r\n    }\r\n\r\n    deleteSpell = (id: string) => {\r\n      const val =  this.http.delete<any>('/api/spells/deleteASpell/' + id, {\r\n        headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n        }),\r\n      });\r\n      return val;\r\n    }\r\n\r\n  // ALIGNMENTS\r\n      loadAlignments = () => {\r\n        const val =  this.http.get<Alignments>('/api/alignments/', {\r\n          headers: new HttpHeaders({\r\n          'Access-Control-Allow-Origin': '*'\r\n          }),\r\n        });\r\n        return val;\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {pluck} from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\ninterface User {\r\n  userName: string;\r\n  userEmail: string;\r\n  userID: number;\r\n  forcedReset: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private user = new BehaviorSubject<User> ({} as User);\r\n\r\n  // GETTERS\r\n  getUser = this.user.asObservable();\r\n\r\n  // SETTERS\r\n  setUser(arg) { this.user.next(arg); }\r\n\r\n  loginUser = (body: {} ) => {\r\n    const val =  this.http.post<any>('/api/login', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  resetPassword = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/resetPassword', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  insertUser  = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/insertUser', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  newPassword  = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/login/newPassword', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  console.log('environment.production', environment)\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}