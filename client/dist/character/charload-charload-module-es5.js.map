{"version":3,"sources":["webpack:///src/app/charload/char-card/char-card.component.ts","webpack:///src/app/charload/char-card/char-card.component.html","webpack:///src/app/charload/charload-routing.module.ts","webpack:///src/app/charload/charload.module.ts","webpack:///src/app/charload/load/load.component.html","webpack:///src/app/charload/load/load.component.ts","webpack:///src/app/services/char.service.ts"],"names":["CharCardComponent","router","userService","charDataSvc","isDeceased","pers","joinArrays","arr","classes","map","arg","join","lvls","substr","length","calcAc","reduce","a","b","ac","selector","templateUrl","styleUrls","routes","path","component","CharloadRoutingModule","forChild","imports","exports","CharloadModule","declarations","LoadComponent","charSvc","titleService","characters","deadCharacters","displayChar","id","name","reset","loadCharBase","toString","subscribe","val","setCharBasics","setCharID","setCharName","navigate","getClasses","str","c","push","CharClass","className","getLevels","getUser","loggedIn","getChars","results","allChar","myChar","filter","char","User","userEmail","notMyChar","console","log","setAllChars","setTitle","CharService","http","allChars","getAllChars","asObservable","get","headers","next","providedIn"],"mappings":"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","file":"charload-charload-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { CharDataService } from '../../services/char-data.service';\r\nimport { UserService } from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-char-card',\r\n  templateUrl: './char-card.component.html',\r\n  styleUrls: ['./char-card.component.css']\r\n})\r\nexport class CharCardComponent implements OnInit {\r\n  @Input() char: {};\r\n  ac:number;\r\n\r\n  constructor(private router: Router,\r\n    private userService: UserService,\r\n    private charDataSvc: CharDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ac = this.calcAc(this.char[\"CharACs\"]);\r\n  }\r\n  isDeceased = (pers: {}) => {\r\n    return pers['isDead'];\r\n  }\r\n  joinArrays = (arr: []) => {\r\n    const classes = arr.map(arg => arg['CharClass']['className']+'/').join('');\r\n    const lvls = arr.map(arg => arg['classLevel']+'/').join('');\r\n    return `${classes.substr(0, classes.length - 1)} - ${lvls.substr(0, lvls.length - 1)}`;\r\n  }\r\n  calcAc = (arr:[]) => {\r\n    return arr.reduce( (a, b) => a + b[\"score\"], 0);\r\n  }\r\n\r\n}\r\n","\r\n  <div class=\"card\">\r\n    <div class=\"content\">\r\n      <div *ngIf=\"isDeceased(char)\" class='crossbar'>Deceased</div>\r\n      <div class=\"header\">{{char[\"charName\"]}}</div>\r\n      <img src=\"../../../assets/{{char['image']}}\" />\r\n      <div class='classBar'>{{joinArrays(char['CharLevels'])}} </div>\r\n      <div class='detailHolder'>\r\n        <div class='acRating'>\r\n          <p>{{ac}}</p>\r\n        </div>\r\n        <div class='hpRating'>\r\n          <p>{{char[\"charHP\"]}}</p>\r\n        </div>\r\n        <div style='text-align: center;'>{{char[\"User\"][\"userName\"]}}</div>\r\n        <div style='text-align: center;'>{{char['Race']['raceDesc']}}</div>\r\n        <div style='text-align: center;'>{{char['Alignment']['alignName']}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoadComponent } from './load/load.component'\r\n\r\nconst routes: Routes = [\r\n  {path:'', component: LoadComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CharloadRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { LoadComponent } from './load/load.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { CharloadRoutingModule } from './charload-routing.module';\r\nimport { CharCardComponent } from './char-card/char-card.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoadComponent,\r\n    CharCardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CharloadRoutingModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class CharloadModule { }\r\n","<!--\r\n<table class=\"ui selectable celled table striped\">\r\n  <thead>\r\n    <tr><th>Name</th>\r\n    <th>Race</th>\r\n    <th>Class(es)</th>\r\n    <th>Level(s)</th>\r\n  </tr></thead>\r\n  <tbody>\r\n    <tr style='cursor: pointer;' *ngFor='let c of characters' (click)='displayChar(c.charID, c.charName)'>\r\n      <td data-label='Name'>{{c.charName}}</td>\r\n      <td data-label='Race'>{{c.Race.raceDesc}}</td>\r\n      <td data-label='Classes'>{{getClasses(c.CharLevels)}}</td>\r\n      <td data-label='Levels'>{{getLevels(c.CharLevels)}}</td>\r\n    </tr>\r\n\r\n  </tbody>\r\n</table>\r\n<table class=\"ui selectable celled table striped\">\r\n  <thead>\r\n    <tr>\r\n      <th colspan=\"4\">Dead</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr style='cursor: pointer;' *ngFor='let c of deadCharacters' (click)='displayChar(c.charID, c.charName)'>\r\n      <td data-label='Name'>{{c.charName}}</td>\r\n      <td data-label='Race'>{{c.Race.raceDesc}}</td>\r\n      <td data-label='Classes'>{{getClasses(c.CharLevels)}}</td>\r\n      <td data-label='Levels'>{{getLevels(c.CharLevels)}}</td>\r\n    </tr>\r\n\r\n  </tbody>\r\n</table>\r\n-->\r\n<div class=\"ui cards\">\r\n    <app-char-card *ngFor = \"let aChar of characters\" [char]=\"aChar\" (click)='displayChar(aChar.charID, aChar.charName)' ></app-char-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { CharService } from '../../services/char.service';\r\nimport { CharDataService } from '../../services/char-data.service';\r\nimport {CharCardComponent} from \"../char-card/char-card.component\"\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\n\r\ninterface Character {\r\n  results: {\r\n    charID: number;\r\n    charName: string;\r\n    charHP: number;\r\n    Race: {\r\n      raceDesc: string;\r\n    },\r\n    User: {\r\n      userName: string;\r\n      userEmail: string;\r\n    },\r\n    CharAcs: {\r\n      score: number;\r\n    }[],\r\n    CharLevels: {\r\n      classLevel: number;\r\n      CharClass: {\r\n        className: string;\r\n      }\r\n    }[],\r\n    Alignment:{\r\n      alignID: number;\r\n      alignName: string;\r\n    }\r\n  }[];\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-load',\r\n  templateUrl: './load.component.html',\r\n  styleUrls: ['./load.component.css']\r\n})\r\nexport class LoadComponent implements OnInit {\r\n  characters = [];\r\n  deadCharacters = [];\r\n  charID: number;\r\n  loggedIn: {};\r\n\r\n  constructor(private charSvc: CharService,\r\n              private charDataSvc: CharDataService,\r\n              private userService: UserService,\r\n              private titleService: Title,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUser.subscribe( (val) => this.loggedIn = val);\r\n\r\n    this.charSvc.getChars().subscribe( results => {\r\n      const allChar = results.results;\r\n      const myChar = allChar.filter( (char) => (char.User.userEmail === this.loggedIn['userEmail'] && !char['isDead']));\r\n      const notMyChar = allChar.filter(char =>\r\n        char.User.userEmail !== this.loggedIn['userEmail'] ||\r\n        (char.User.userEmail === this.loggedIn['userEmail'] && char['isDead'])\r\n      );\r\n      this.characters = [...myChar, ...notMyChar];\r\n      console.log(111, this.characters, myChar);\r\n      this.charSvc.setAllChars(results);\r\n    });\r\n\r\n    this.titleService.setTitle('Load Character');\r\n\r\n  }\r\n  displayChar = async (id: number, name: string) => {\r\n    this.charDataSvc.reset();\r\n    this.charDataSvc.loadCharBase(id.toString()).subscribe( async val => {\r\n      this.charDataSvc.setCharBasics(val);\r\n      this.charDataSvc.setCharID(id);\r\n      this.charDataSvc.setCharName(name);\r\n      this.router.navigate(['/charGen']);\r\n    });\r\n\r\n  }\r\n  getClasses = (arr) => {\r\n    const str = []\r\n    for ( const c of arr){\r\n      str.push(c.CharClass.className);\r\n    }\r\n    return str.join(', ');\r\n  }\r\n\r\n  getLevels = (arr: []) => {\r\n    const str = []\r\n    for ( const c of arr){\r\n      str.push(c['classLevel']);\r\n    }\r\n    return str.join('/');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport {pluck} from 'rxjs/operators';\r\n\r\nexport interface Character {\r\n  results: {\r\n    charID: number;\r\n    charName: string;\r\n    charHP: number;\r\n    Race: {\r\n      raceDesc: string;\r\n    },\r\n    User: {\r\n      userName: string;\r\n      userEmail: string;\r\n    },\r\n    CharLevels: {\r\n      classLevel: number;\r\n      CharClass: {\r\n        className: string;\r\n      }\r\n    }[],\r\n    CharACs: {\r\n      score: number;\r\n    }[],\r\n    Alignment:{\r\n      alignID: number;\r\n      alignName: string;\r\n    }\r\n  }[];\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // DECLARATIONS\r\n  private allChars = new BehaviorSubject<Character> ({results: []} as Character);\r\n\r\n  // GETTERS\r\n  getAllChars = this.allChars.asObservable();\r\n\r\n  // SETTERS\r\n  setAllChars(arg) { this.allChars.next(arg); }\r\n\r\n  public getChars = () => {\r\n    //return this.http.get<Character>('https://cors-anywhere.herokuapp.com/https://pathfinder-krc.herokuapp.com/api/characters/all', {\r\n    return this.http.get<Character>('/api/characters/all', {\r\n        headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n  }\r\n\r\n}\r\n"]}