{"version":3,"sources":["webpack:///src/app/newChar/new-char-routing.module.ts","webpack:///src/app/newChar/new-char.module.ts","webpack:///src/app/newChar/new-char/new-char.component.html","webpack:///src/app/newChar/new-char/new-char.component.ts"],"names":["routes","path","component","NewCharRoutingModule","NewCharModule","NewCharComponent","charDataSvc","userDataService","router","http","onCancel","evt","console","log","navigate","onSubmit","preventDefault","body","userID","loggedIn","charName","charHP","raceID","charRace","alignID","charAlignment","classID","charClass","classLvl","charLevel","addCharacter","subscribe","vals","getUser","val","getAllAlignment","theAlignments","results","length","loadAlignments","setAllAlignments"],"mappings":"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","file":"newChar-new-char-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NewCharComponent } from './new-char/new-char.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: NewCharComponent}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n export class NewCharRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NewCharRoutingModule } from './new-char-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    NewCharRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class NewCharModule { }\r\n","<h1>New Character</h1>\r\n<form class=\"ui large form\" #modForm='ngForm' (ngSubmit)='onSubmit($event)'>\r\n  <div>\r\n    <div class='ui grid gridRow'>\r\n      <div  class=\"column sixteen wide ui input\" >\r\n        <label for=\"charName\">Name</label>\r\n        <input type='text' name='charName' [(ngModel)]='charName' >\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charRace\">Race</label>\r\n        <select name=\"charRace\"  [(ngModel)]='charRace'>\r\n          <option value=\"1\">Dwarf</option>\r\n          <option value=\"2\">Elf</option>\r\n          <option value=\"3\">Gnome</option>\r\n          <option value=\"4\">Halfling</option>\r\n          <option value=\"5\">Half-elf</option>\r\n          <option value=\"6\">Half-orc</option>\r\n          <option value=\"7\">Human</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\" style=\"width: calc(100% / 3);\">\r\n        <label for=\"charClass\">Class</label>\r\n        <select name=\"charClass\" [(ngModel)]='charClass'>\r\n          <option value=\"0\">Select One</option>\r\n          <option value=\"1\">Barbarian</option>\r\n          <option value=\"2\">Bard</option>\r\n          <option value=\"3\">Cleric</option>\r\n          <option value=\"4\">Druid</option>\r\n          <option value=\"5\">Fighter</option>\r\n          <option value=\"6\">Monk</option>\r\n          <option value=\"7\">Paladin</option>\r\n          <option value=\"8\">Ranger</option>\r\n          <option value=\"9\">Rogue</option>\r\n          <option value=\"10\">Sorcerer</option>\r\n          <option value=\"11\">Wizard</option>\r\n        </select>\r\n      </div>\r\n      <div  class=\"column ui input\"  style=\"width: calc(100% / 3);\">\r\n        <label for=\"charLevel\">Level</label>\r\n        <input type='number' name='charLevel' class='spellInput' [(ngModel)]='charLevel'>\r\n      </div>\r\n      <div class='ui grid gridRow' style=\"width: 100%; margin-bottom: 14px;\">\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charAlignment\">Alignment</label>\r\n          <select name=\"charAlignment\" [(ngModel)]='charAlignment'>\r\n            <option value=\"0\"></option>\r\n            <option *ngFor='let al of theAlignments' value={{al.alignID}}>{{al.alignName}}</option>\r\n          </select>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charHP\">Hit Points</label>\r\n          <input type='number' name='charHP' class='spellInput' [(ngModel)]='charHP'>\r\n        </div>\r\n      </div>\r\n      <!--\r\n      <h1>Base Stats - do not include racial benefits. </h1>\r\n      <div class='ui grid gridRow'>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charStr\">Strength</label>\r\n          <input type='number' name='charStr' [(ngModel)]='charStr'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charDex\">Dexterity</label>\r\n          <input type='number' name='charDex' [(ngModel)]='charDex'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charCon\">Constitution</label>\r\n          <input type='number' name='charCon' [(ngModel)]='charCon'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charInt\">Intelligence</label>\r\n          <input type='number' name='charInt' [(ngModel)]='charInt'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charWis\">Wisdom</label>\r\n          <input type='number' name='charWis' [(ngModel)]='charWis'>\r\n        </div>\r\n        <div  class=\"column wide ui input\" style=\"width: calc(100% / 6);\">\r\n          <label for=\"charChr\">Chraisma</label>\r\n          <input type='number' name='charChr' [(ngModel)]='charChr'>\r\n        </div>\r\n      </div>\r\n      -->\r\n    </div>\r\n  </div>\r\n  <div class=\"container\" style='text-align: center; margin-top:24px'>\r\n    <button class='ui primary button' type=\"submit\">Save</button>\r\n    <button class='ui yellow button' type=\"button\" style=\"margin-left:24px\" (click)='onCancel($event)'>Cancel</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { CharDataService } from '../../services/char-data.service';\r\nimport { UserService } from '../../services/user.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport _ from 'lodash';\r\nimport {Stats, Saves} from '../../helpers/enum';\r\n\r\n@Component({\r\n  selector: 'app-new-char',\r\n  templateUrl: './new-char.component.html',\r\n  styleUrls: ['./new-char.component.css']\r\n})\r\nexport class NewCharComponent implements OnInit {\r\n  modForm;\r\n  loggedIn: {};\r\n  charName: string;\r\n  charRace: string;\r\n  charClass: string;\r\n  charAlignment: string;\r\n  charHP: string;\r\n  charLevel: string;\r\n  charStr: string;\r\n  charDex: string;\r\n  charCon: string;\r\n  charInt: string;\r\n  charWis: string;\r\n  charChr: string;\r\n  theAlignments;\r\n\r\n  constructor(private charDataSvc: CharDataService,\r\n    private userDataService: UserService,\r\n    private router: Router,\r\n    private http: HttpClient ) { }\r\n\r\n    ngOnInit(): void {\r\n      this.userDataService.getUser.subscribe( (val) => this.loggedIn = val);\r\n      this.charDataSvc.getAllAlignment.subscribe( (val) => this.theAlignments = val.results);\r\n      if (!this.theAlignments || this.theAlignments.length === 0){\r\n        this.charDataSvc.loadAlignments().subscribe( val => {\r\n          this.theAlignments = val.results;\r\n          this.charDataSvc.setAllAlignments(val);\r\n        });\r\n      }\r\n    }\r\n    onCancel = evt =>{\r\n      console.log('evt')\r\n      this.router.navigate(['/charLoad']);\r\n    }\r\n\r\n    onSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      const body = {\r\n        userID: this.loggedIn['userID'],\r\n        charName: this.charName,\r\n        charHP: this.charHP,\r\n        raceID: this.charRace,\r\n        alignID: this.charAlignment,\r\n        classID: this.charClass,\r\n        classLvl: this.charLevel\r\n      };\r\n      this.charDataSvc.addCharacter(body).subscribe(vals => {\r\n        this.router.navigate(['/charLoad']);\r\n      });\r\n    }\r\n  }\r\n"]}