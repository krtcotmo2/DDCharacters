{"version":3,"sources":["webpack:///src/app/services/expendable.service.ts","webpack:///src/app/services/socket.service.ts"],"names":["ExpendableType","ExpendableService","http","socket","allExpendables","results","getExpendables","asObservable","loadExpendables","charID","val","get","toString","headers","insertExpendables","body","post","deleteExpendables","expId","updateExpendables","emit","arg","next","providedIn","SocketService","createObserver","evt","fromEvent"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n\r\nexport enum ExpendableType {\r\n  Class = 'Class',\r\n  Charge = 'Charge',\r\n  Potion = 'Potion',\r\n  Scroll = 'Scroll'\r\n\r\n}\r\nexport interface Expendable {\r\n  id: number;\r\n  charID: number;\r\n  description: string;\r\n  expType: ExpendableType;\r\n  qty: number;\r\n}\r\n\r\ninterface Expendables {\r\n  charID: string;\r\n  results: Expendable[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ExpendableService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private socket: Socket\r\n  ) { }\r\n\r\n  // DECLARATIONS\r\n  private allExpendables = new BehaviorSubject<Expendables>( {results: []} as Expendables );\r\n  // GETTERS\r\n  getExpendables = this.allExpendables.asObservable();\r\n  // SETTERS\r\n  setExpendables(arg) { this.allExpendables.next(arg); }\r\n\r\n  loadExpendables = (charID: number) =>{\r\n    const val =  this.http.get<any>('/api/expendables/get/' + charID.toString(), {\r\n        headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  insertExpendables = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/expendables/add', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  deleteExpendables = (expId: number) => {\r\n    const val =  this.http.delete<any>('/api/expendables/delete/' + expId.toString(), {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    return val;\r\n  }\r\n\r\n  updateExpendables = (body: {}) => {\r\n    const val =  this.http.post<any>('/api/expendables/update', body, {\r\n      headers: new HttpHeaders({\r\n        'Access-Control-Allow-Origin': '*'\r\n      }),\r\n    });\r\n    this.socket.emit('UPDATEEXPENDABLE', body);\r\n    return val;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n\r\n  constructor(private socket: Socket) { }\r\n\r\n  getInitialData() {\r\n    return this.createObserver('initial');\r\n  }\r\n\r\n  updateHP() {\r\n    return this.createObserver('hpUupdate');\r\n  }\r\n\r\n  updateSpell() {\r\n    return this.createObserver('spellUpdate');\r\n  }\r\n\r\n  addSpell() {\r\n    return this.createObserver('addSpell');\r\n  }\r\n\r\n  deleteSpell() {\r\n    return this.createObserver('deleteSpell');\r\n  }\r\n\r\n  changeSpell() {\r\n    return this.createObserver('changeSpell');\r\n  }\r\n\r\n  addExpendable() {\r\n    return this.createObserver('addExpendable');\r\n  }\r\n\r\n  deleteExpendable() {\r\n    return this.createObserver('deleteExpendable');\r\n  }\r\n\r\n  updateExpendable() {\r\n    return this.createObserver('updateExpendable');\r\n  }\r\n\r\n  private createObserver(evt: string) {\r\n    return this.socket.fromEvent(evt);\r\n  }\r\n}\r\n"]}